import { IIterable } from "../../dart/core/iterable";
import { List } from "../../dart/core/list";
import { Map } from "../../dart/core/map";
import { IMapEntry, MapEntry } from "../../dart/core/mapEntry";
import { ISet } from "../../dart/core/set";
import { IDiagnosticable } from "../foundation/diagnosticable";
import { DiagnosticLevel } from "../foundation/diagnosticLevel";
import { IDiagnosticPropertiesBuilder } from "../foundation/diagnosticPropertiesBuilder";
import { IDiagnosticsNode } from "../foundation/diagnosticsNode";
import { DiagnosticsTreeStyle } from "../foundation/diagnosticsTreeStyle";
import { IKeyboardKey } from "./keyboardKey";
declare const flutter: {
    services: {
        logicalKeyboardKey: (
            this: void,
            logicalKeyboardKey: ILogicalKeyboardKey,
            keyId: number
        ) => ILogicalKeyboardKey;
        logicalKeyboardKeyFindKeyByKeyId: (
            keyId: number
        ) => ILogicalKeyboardKey | undefined;
        logicalKeyboardKeyIsControlCharacter: (label: string) => boolean;
        logicalKeyboardKeyCollapseSynonyms: (
            input: ISet<ILogicalKeyboardKey>
        ) => ISet<ILogicalKeyboardKey>;
        logicalKeyboardKeyKnownLogicalKeys: () => IIterable<ILogicalKeyboardKey>;
    };
};
export interface ILogicalKeyboardKey {
    keyId: number;
    getKeyLabel: () => string;
    getDebugName: () => string | undefined;
    getHashCode: () => number;
    getIsAutogenerated: () => boolean;
    getSynonyms: () => ISet<ILogicalKeyboardKey>;
    debugFillProperties: (properties: IDiagnosticPropertiesBuilder) => void;
    toStringShort: () => string;
    toString: (props: { minLevel: DiagnosticLevel }) => string;
    toDiagnosticsNode: (props?: {
        name?: string | undefined;
        style?: DiagnosticsTreeStyle | undefined;
    }) => IDiagnosticsNode;
}
export class LogicalKeyboardKey implements Omit<IKeyboardKey>, IDiagnosticable {
    public static valueMask = 0x000ffffffff;
    public static planeMask = 0x0ff00000000;
    public static unicodePlane = 0x00000000000;
    public static unprintablePlane = 0x00100000000;
    public static flutterPlane = 0x00200000000;
    public static startOfPlatformPlanes = 0x01100000000;
    public static androidPlane = 0x01100000000;
    public static fuchsiaPlane = 0x01200000000;
    public static iosPlane = 0x01300000000;
    public static macosPlane = 0x01400000000;
    public static gtkPlane = 0x01500000000;
    public static windowsPlane = 0x01600000000;
    public static webPlane = 0x01700000000;
    public static glfwPlane = 0x01800000000;
    public static space = new LogicalKeyboardKey(0x00000000020);
    public static exclamation = new LogicalKeyboardKey(0x00000000021);
    public static quote = new LogicalKeyboardKey(0x00000000022);
    public static numberSign = new LogicalKeyboardKey(0x00000000023);
    public static dollar = new LogicalKeyboardKey(0x00000000024);
    public static percent = new LogicalKeyboardKey(0x00000000025);
    public static ampersand = new LogicalKeyboardKey(0x00000000026);
    public static quoteSingle = new LogicalKeyboardKey(0x00000000027);
    public static parenthesisLeft = new LogicalKeyboardKey(0x00000000028);
    public static parenthesisRight = new LogicalKeyboardKey(0x00000000029);
    public static asterisk = new LogicalKeyboardKey(0x0000000002a);
    public static add = new LogicalKeyboardKey(0x0000000002b);
    public static comma = new LogicalKeyboardKey(0x0000000002c);
    public static minus = new LogicalKeyboardKey(0x0000000002d);
    public static period = new LogicalKeyboardKey(0x0000000002e);
    public static slash = new LogicalKeyboardKey(0x0000000002f);
    public static digit0 = new LogicalKeyboardKey(0x00000000030);
    public static digit1 = new LogicalKeyboardKey(0x00000000031);
    public static digit2 = new LogicalKeyboardKey(0x00000000032);
    public static digit3 = new LogicalKeyboardKey(0x00000000033);
    public static digit4 = new LogicalKeyboardKey(0x00000000034);
    public static digit5 = new LogicalKeyboardKey(0x00000000035);
    public static digit6 = new LogicalKeyboardKey(0x00000000036);
    public static digit7 = new LogicalKeyboardKey(0x00000000037);
    public static digit8 = new LogicalKeyboardKey(0x00000000038);
    public static digit9 = new LogicalKeyboardKey(0x00000000039);
    public static colon = new LogicalKeyboardKey(0x0000000003a);
    public static semicolon = new LogicalKeyboardKey(0x0000000003b);
    public static less = new LogicalKeyboardKey(0x0000000003c);
    public static equal = new LogicalKeyboardKey(0x0000000003d);
    public static greater = new LogicalKeyboardKey(0x0000000003e);
    public static question = new LogicalKeyboardKey(0x0000000003f);
    public static at = new LogicalKeyboardKey(0x00000000040);
    public static bracketLeft = new LogicalKeyboardKey(0x0000000005b);
    public static backslash = new LogicalKeyboardKey(0x0000000005c);
    public static bracketRight = new LogicalKeyboardKey(0x0000000005d);
    public static caret = new LogicalKeyboardKey(0x0000000005e);
    public static underscore = new LogicalKeyboardKey(0x0000000005f);
    public static backquote = new LogicalKeyboardKey(0x00000000060);
    public static keyA = new LogicalKeyboardKey(0x00000000061);
    public static keyB = new LogicalKeyboardKey(0x00000000062);
    public static keyC = new LogicalKeyboardKey(0x00000000063);
    public static keyD = new LogicalKeyboardKey(0x00000000064);
    public static keyE = new LogicalKeyboardKey(0x00000000065);
    public static keyF = new LogicalKeyboardKey(0x00000000066);
    public static keyG = new LogicalKeyboardKey(0x00000000067);
    public static keyH = new LogicalKeyboardKey(0x00000000068);
    public static keyI = new LogicalKeyboardKey(0x00000000069);
    public static keyJ = new LogicalKeyboardKey(0x0000000006a);
    public static keyK = new LogicalKeyboardKey(0x0000000006b);
    public static keyL = new LogicalKeyboardKey(0x0000000006c);
    public static keyM = new LogicalKeyboardKey(0x0000000006d);
    public static keyN = new LogicalKeyboardKey(0x0000000006e);
    public static keyO = new LogicalKeyboardKey(0x0000000006f);
    public static keyP = new LogicalKeyboardKey(0x00000000070);
    public static keyQ = new LogicalKeyboardKey(0x00000000071);
    public static keyR = new LogicalKeyboardKey(0x00000000072);
    public static keyS = new LogicalKeyboardKey(0x00000000073);
    public static keyT = new LogicalKeyboardKey(0x00000000074);
    public static keyU = new LogicalKeyboardKey(0x00000000075);
    public static keyV = new LogicalKeyboardKey(0x00000000076);
    public static keyW = new LogicalKeyboardKey(0x00000000077);
    public static keyX = new LogicalKeyboardKey(0x00000000078);
    public static keyY = new LogicalKeyboardKey(0x00000000079);
    public static keyZ = new LogicalKeyboardKey(0x0000000007a);
    public static braceLeft = new LogicalKeyboardKey(0x0000000007b);
    public static bar = new LogicalKeyboardKey(0x0000000007c);
    public static braceRight = new LogicalKeyboardKey(0x0000000007d);
    public static tilde = new LogicalKeyboardKey(0x0000000007e);
    public static unidentified = new LogicalKeyboardKey(0x00100000001);
    public static backspace = new LogicalKeyboardKey(0x00100000008);
    public static tab = new LogicalKeyboardKey(0x00100000009);
    public static enter = new LogicalKeyboardKey(0x0010000000d);
    public static escape = new LogicalKeyboardKey(0x0010000001b);
    public static delete = new LogicalKeyboardKey(0x0010000007f);
    public static accel = new LogicalKeyboardKey(0x00100000101);
    public static altGraph = new LogicalKeyboardKey(0x00100000103);
    public static capsLock = new LogicalKeyboardKey(0x00100000104);
    public static fn = new LogicalKeyboardKey(0x00100000106);
    public static fnLock = new LogicalKeyboardKey(0x00100000107);
    public static hyper = new LogicalKeyboardKey(0x00100000108);
    public static numLock = new LogicalKeyboardKey(0x0010000010a);
    public static scrollLock = new LogicalKeyboardKey(0x0010000010c);
    public static superKey = new LogicalKeyboardKey(0x0010000010e);
    public static symbol = new LogicalKeyboardKey(0x0010000010f);
    public static symbolLock = new LogicalKeyboardKey(0x00100000110);
    public static shiftLevel5 = new LogicalKeyboardKey(0x00100000111);
    public static arrowDown = new LogicalKeyboardKey(0x00100000301);
    public static arrowLeft = new LogicalKeyboardKey(0x00100000302);
    public static arrowRight = new LogicalKeyboardKey(0x00100000303);
    public static arrowUp = new LogicalKeyboardKey(0x00100000304);
    public static end = new LogicalKeyboardKey(0x00100000305);
    public static home = new LogicalKeyboardKey(0x00100000306);
    public static pageDown = new LogicalKeyboardKey(0x00100000307);
    public static pageUp = new LogicalKeyboardKey(0x00100000308);
    public static clear = new LogicalKeyboardKey(0x00100000401);
    public static copy = new LogicalKeyboardKey(0x00100000402);
    public static crSel = new LogicalKeyboardKey(0x00100000403);
    public static cut = new LogicalKeyboardKey(0x00100000404);
    public static eraseEof = new LogicalKeyboardKey(0x00100000405);
    public static exSel = new LogicalKeyboardKey(0x00100000406);
    public static insert = new LogicalKeyboardKey(0x00100000407);
    public static paste = new LogicalKeyboardKey(0x00100000408);
    public static redo = new LogicalKeyboardKey(0x00100000409);
    public static undo = new LogicalKeyboardKey(0x0010000040a);
    public static accept = new LogicalKeyboardKey(0x00100000501);
    public static again = new LogicalKeyboardKey(0x00100000502);
    public static attn = new LogicalKeyboardKey(0x00100000503);
    public static cancel = new LogicalKeyboardKey(0x00100000504);
    public static contextMenu = new LogicalKeyboardKey(0x00100000505);
    public static execute = new LogicalKeyboardKey(0x00100000506);
    public static find = new LogicalKeyboardKey(0x00100000507);
    public static help = new LogicalKeyboardKey(0x00100000508);
    public static pause = new LogicalKeyboardKey(0x00100000509);
    public static play = new LogicalKeyboardKey(0x0010000050a);
    public static props = new LogicalKeyboardKey(0x0010000050b);
    public static select = new LogicalKeyboardKey(0x0010000050c);
    public static zoomIn = new LogicalKeyboardKey(0x0010000050d);
    public static zoomOut = new LogicalKeyboardKey(0x0010000050e);
    public static brightnessDown = new LogicalKeyboardKey(0x00100000601);
    public static brightnessUp = new LogicalKeyboardKey(0x00100000602);
    public static camera = new LogicalKeyboardKey(0x00100000603);
    public static eject = new LogicalKeyboardKey(0x00100000604);
    public static logOff = new LogicalKeyboardKey(0x00100000605);
    public static power = new LogicalKeyboardKey(0x00100000606);
    public static powerOff = new LogicalKeyboardKey(0x00100000607);
    public static printScreen = new LogicalKeyboardKey(0x00100000608);
    public static hibernate = new LogicalKeyboardKey(0x00100000609);
    public static standby = new LogicalKeyboardKey(0x0010000060a);
    public static wakeUp = new LogicalKeyboardKey(0x0010000060b);
    public static allCandidates = new LogicalKeyboardKey(0x00100000701);
    public static alphanumeric = new LogicalKeyboardKey(0x00100000702);
    public static codeInput = new LogicalKeyboardKey(0x00100000703);
    public static compose = new LogicalKeyboardKey(0x00100000704);
    public static convert = new LogicalKeyboardKey(0x00100000705);
    public static finalMode = new LogicalKeyboardKey(0x00100000706);
    public static groupFirst = new LogicalKeyboardKey(0x00100000707);
    public static groupLast = new LogicalKeyboardKey(0x00100000708);
    public static groupNext = new LogicalKeyboardKey(0x00100000709);
    public static groupPrevious = new LogicalKeyboardKey(0x0010000070a);
    public static modeChange = new LogicalKeyboardKey(0x0010000070b);
    public static nextCandidate = new LogicalKeyboardKey(0x0010000070c);
    public static nonConvert = new LogicalKeyboardKey(0x0010000070d);
    public static previousCandidate = new LogicalKeyboardKey(0x0010000070e);
    public static process = new LogicalKeyboardKey(0x0010000070f);
    public static singleCandidate = new LogicalKeyboardKey(0x00100000710);
    public static hangulMode = new LogicalKeyboardKey(0x00100000711);
    public static hanjaMode = new LogicalKeyboardKey(0x00100000712);
    public static junjaMode = new LogicalKeyboardKey(0x00100000713);
    public static eisu = new LogicalKeyboardKey(0x00100000714);
    public static hankaku = new LogicalKeyboardKey(0x00100000715);
    public static hiragana = new LogicalKeyboardKey(0x00100000716);
    public static hiraganaKatakana = new LogicalKeyboardKey(0x00100000717);
    public static kanaMode = new LogicalKeyboardKey(0x00100000718);
    public static kanjiMode = new LogicalKeyboardKey(0x00100000719);
    public static katakana = new LogicalKeyboardKey(0x0010000071a);
    public static romaji = new LogicalKeyboardKey(0x0010000071b);
    public static zenkaku = new LogicalKeyboardKey(0x0010000071c);
    public static zenkakuHankaku = new LogicalKeyboardKey(0x0010000071d);
    public static f1 = new LogicalKeyboardKey(0x00100000801);
    public static f2 = new LogicalKeyboardKey(0x00100000802);
    public static f3 = new LogicalKeyboardKey(0x00100000803);
    public static f4 = new LogicalKeyboardKey(0x00100000804);
    public static f5 = new LogicalKeyboardKey(0x00100000805);
    public static f6 = new LogicalKeyboardKey(0x00100000806);
    public static f7 = new LogicalKeyboardKey(0x00100000807);
    public static f8 = new LogicalKeyboardKey(0x00100000808);
    public static f9 = new LogicalKeyboardKey(0x00100000809);
    public static f10 = new LogicalKeyboardKey(0x0010000080a);
    public static f11 = new LogicalKeyboardKey(0x0010000080b);
    public static f12 = new LogicalKeyboardKey(0x0010000080c);
    public static f13 = new LogicalKeyboardKey(0x0010000080d);
    public static f14 = new LogicalKeyboardKey(0x0010000080e);
    public static f15 = new LogicalKeyboardKey(0x0010000080f);
    public static f16 = new LogicalKeyboardKey(0x00100000810);
    public static f17 = new LogicalKeyboardKey(0x00100000811);
    public static f18 = new LogicalKeyboardKey(0x00100000812);
    public static f19 = new LogicalKeyboardKey(0x00100000813);
    public static f20 = new LogicalKeyboardKey(0x00100000814);
    public static f21 = new LogicalKeyboardKey(0x00100000815);
    public static f22 = new LogicalKeyboardKey(0x00100000816);
    public static f23 = new LogicalKeyboardKey(0x00100000817);
    public static f24 = new LogicalKeyboardKey(0x00100000818);
    public static soft1 = new LogicalKeyboardKey(0x00100000901);
    public static soft2 = new LogicalKeyboardKey(0x00100000902);
    public static soft3 = new LogicalKeyboardKey(0x00100000903);
    public static soft4 = new LogicalKeyboardKey(0x00100000904);
    public static soft5 = new LogicalKeyboardKey(0x00100000905);
    public static soft6 = new LogicalKeyboardKey(0x00100000906);
    public static soft7 = new LogicalKeyboardKey(0x00100000907);
    public static soft8 = new LogicalKeyboardKey(0x00100000908);
    public static close = new LogicalKeyboardKey(0x00100000a01);
    public static mailForward = new LogicalKeyboardKey(0x00100000a02);
    public static mailReply = new LogicalKeyboardKey(0x00100000a03);
    public static mailSend = new LogicalKeyboardKey(0x00100000a04);
    public static mediaPlayPause = new LogicalKeyboardKey(0x00100000a05);
    public static mediaStop = new LogicalKeyboardKey(0x00100000a07);
    public static mediaTrackNext = new LogicalKeyboardKey(0x00100000a08);
    public static mediaTrackPrevious = new LogicalKeyboardKey(0x00100000a09);
    public static newKey = new LogicalKeyboardKey(0x00100000a0a);
    public static open = new LogicalKeyboardKey(0x00100000a0b);
    public static print = new LogicalKeyboardKey(0x00100000a0c);
    public static save = new LogicalKeyboardKey(0x00100000a0d);
    public static spellCheck = new LogicalKeyboardKey(0x00100000a0e);
    public static audioVolumeDown = new LogicalKeyboardKey(0x00100000a0f);
    public static audioVolumeUp = new LogicalKeyboardKey(0x00100000a10);
    public static audioVolumeMute = new LogicalKeyboardKey(0x00100000a11);
    public static launchApplication2 = new LogicalKeyboardKey(0x00100000b01);
    public static launchCalendar = new LogicalKeyboardKey(0x00100000b02);
    public static launchMail = new LogicalKeyboardKey(0x00100000b03);
    public static launchMediaPlayer = new LogicalKeyboardKey(0x00100000b04);
    public static launchMusicPlayer = new LogicalKeyboardKey(0x00100000b05);
    public static launchApplication1 = new LogicalKeyboardKey(0x00100000b06);
    public static launchScreenSaver = new LogicalKeyboardKey(0x00100000b07);
    public static launchSpreadsheet = new LogicalKeyboardKey(0x00100000b08);
    public static launchWebBrowser = new LogicalKeyboardKey(0x00100000b09);
    public static launchWebCam = new LogicalKeyboardKey(0x00100000b0a);
    public static launchWordProcessor = new LogicalKeyboardKey(0x00100000b0b);
    public static launchContacts = new LogicalKeyboardKey(0x00100000b0c);
    public static launchPhone = new LogicalKeyboardKey(0x00100000b0d);
    public static launchAssistant = new LogicalKeyboardKey(0x00100000b0e);
    public static launchControlPanel = new LogicalKeyboardKey(0x00100000b0f);
    public static browserBack = new LogicalKeyboardKey(0x00100000c01);
    public static browserFavorites = new LogicalKeyboardKey(0x00100000c02);
    public static browserForward = new LogicalKeyboardKey(0x00100000c03);
    public static browserHome = new LogicalKeyboardKey(0x00100000c04);
    public static browserRefresh = new LogicalKeyboardKey(0x00100000c05);
    public static browserSearch = new LogicalKeyboardKey(0x00100000c06);
    public static browserStop = new LogicalKeyboardKey(0x00100000c07);
    public static audioBalanceLeft = new LogicalKeyboardKey(0x00100000d01);
    public static audioBalanceRight = new LogicalKeyboardKey(0x00100000d02);
    public static audioBassBoostDown = new LogicalKeyboardKey(0x00100000d03);
    public static audioBassBoostUp = new LogicalKeyboardKey(0x00100000d04);
    public static audioFaderFront = new LogicalKeyboardKey(0x00100000d05);
    public static audioFaderRear = new LogicalKeyboardKey(0x00100000d06);
    public static audioSurroundModeNext = new LogicalKeyboardKey(0x00100000d07);
    public static avrInput = new LogicalKeyboardKey(0x00100000d08);
    public static avrPower = new LogicalKeyboardKey(0x00100000d09);
    public static channelDown = new LogicalKeyboardKey(0x00100000d0a);
    public static channelUp = new LogicalKeyboardKey(0x00100000d0b);
    public static colorF0Red = new LogicalKeyboardKey(0x00100000d0c);
    public static colorF1Green = new LogicalKeyboardKey(0x00100000d0d);
    public static colorF2Yellow = new LogicalKeyboardKey(0x00100000d0e);
    public static colorF3Blue = new LogicalKeyboardKey(0x00100000d0f);
    public static colorF4Grey = new LogicalKeyboardKey(0x00100000d10);
    public static colorF5Brown = new LogicalKeyboardKey(0x00100000d11);
    public static closedCaptionToggle = new LogicalKeyboardKey(0x00100000d12);
    public static dimmer = new LogicalKeyboardKey(0x00100000d13);
    public static displaySwap = new LogicalKeyboardKey(0x00100000d14);
    public static exit = new LogicalKeyboardKey(0x00100000d15);
    public static favoriteClear0 = new LogicalKeyboardKey(0x00100000d16);
    public static favoriteClear1 = new LogicalKeyboardKey(0x00100000d17);
    public static favoriteClear2 = new LogicalKeyboardKey(0x00100000d18);
    public static favoriteClear3 = new LogicalKeyboardKey(0x00100000d19);
    public static favoriteRecall0 = new LogicalKeyboardKey(0x00100000d1a);
    public static favoriteRecall1 = new LogicalKeyboardKey(0x00100000d1b);
    public static favoriteRecall2 = new LogicalKeyboardKey(0x00100000d1c);
    public static favoriteRecall3 = new LogicalKeyboardKey(0x00100000d1d);
    public static favoriteStore0 = new LogicalKeyboardKey(0x00100000d1e);
    public static favoriteStore1 = new LogicalKeyboardKey(0x00100000d1f);
    public static favoriteStore2 = new LogicalKeyboardKey(0x00100000d20);
    public static favoriteStore3 = new LogicalKeyboardKey(0x00100000d21);
    public static guide = new LogicalKeyboardKey(0x00100000d22);
    public static guideNextDay = new LogicalKeyboardKey(0x00100000d23);
    public static guidePreviousDay = new LogicalKeyboardKey(0x00100000d24);
    public static info = new LogicalKeyboardKey(0x00100000d25);
    public static instantReplay = new LogicalKeyboardKey(0x00100000d26);
    public static link = new LogicalKeyboardKey(0x00100000d27);
    public static listProgram = new LogicalKeyboardKey(0x00100000d28);
    public static liveContent = new LogicalKeyboardKey(0x00100000d29);
    public static lock = new LogicalKeyboardKey(0x00100000d2a);
    public static mediaApps = new LogicalKeyboardKey(0x00100000d2b);
    public static mediaFastForward = new LogicalKeyboardKey(0x00100000d2c);
    public static mediaLast = new LogicalKeyboardKey(0x00100000d2d);
    public static mediaPause = new LogicalKeyboardKey(0x00100000d2e);
    public static mediaPlay = new LogicalKeyboardKey(0x00100000d2f);
    public static mediaRecord = new LogicalKeyboardKey(0x00100000d30);
    public static mediaRewind = new LogicalKeyboardKey(0x00100000d31);
    public static mediaSkip = new LogicalKeyboardKey(0x00100000d32);
    public static nextFavoriteChannel = new LogicalKeyboardKey(0x00100000d33);
    public static nextUserProfile = new LogicalKeyboardKey(0x00100000d34);
    public static onDemand = new LogicalKeyboardKey(0x00100000d35);
    public static pInPDown = new LogicalKeyboardKey(0x00100000d36);
    public static pInPMove = new LogicalKeyboardKey(0x00100000d37);
    public static pInPToggle = new LogicalKeyboardKey(0x00100000d38);
    public static pInPUp = new LogicalKeyboardKey(0x00100000d39);
    public static playSpeedDown = new LogicalKeyboardKey(0x00100000d3a);
    public static playSpeedReset = new LogicalKeyboardKey(0x00100000d3b);
    public static playSpeedUp = new LogicalKeyboardKey(0x00100000d3c);
    public static randomToggle = new LogicalKeyboardKey(0x00100000d3d);
    public static rcLowBattery = new LogicalKeyboardKey(0x00100000d3e);
    public static recordSpeedNext = new LogicalKeyboardKey(0x00100000d3f);
    public static rfBypass = new LogicalKeyboardKey(0x00100000d40);
    public static scanChannelsToggle = new LogicalKeyboardKey(0x00100000d41);
    public static screenModeNext = new LogicalKeyboardKey(0x00100000d42);
    public static settings = new LogicalKeyboardKey(0x00100000d43);
    public static splitScreenToggle = new LogicalKeyboardKey(0x00100000d44);
    public static stbInput = new LogicalKeyboardKey(0x00100000d45);
    public static stbPower = new LogicalKeyboardKey(0x00100000d46);
    public static subtitle = new LogicalKeyboardKey(0x00100000d47);
    public static teletext = new LogicalKeyboardKey(0x00100000d48);
    public static tv = new LogicalKeyboardKey(0x00100000d49);
    public static tvInput = new LogicalKeyboardKey(0x00100000d4a);
    public static tvPower = new LogicalKeyboardKey(0x00100000d4b);
    public static videoModeNext = new LogicalKeyboardKey(0x00100000d4c);
    public static wink = new LogicalKeyboardKey(0x00100000d4d);
    public static zoomToggle = new LogicalKeyboardKey(0x00100000d4e);
    public static dvr = new LogicalKeyboardKey(0x00100000d4f);
    public static mediaAudioTrack = new LogicalKeyboardKey(0x00100000d50);
    public static mediaSkipBackward = new LogicalKeyboardKey(0x00100000d51);
    public static mediaSkipForward = new LogicalKeyboardKey(0x00100000d52);
    public static mediaStepBackward = new LogicalKeyboardKey(0x00100000d53);
    public static mediaStepForward = new LogicalKeyboardKey(0x00100000d54);
    public static mediaTopMenu = new LogicalKeyboardKey(0x00100000d55);
    public static navigateIn = new LogicalKeyboardKey(0x00100000d56);
    public static navigateNext = new LogicalKeyboardKey(0x00100000d57);
    public static navigateOut = new LogicalKeyboardKey(0x00100000d58);
    public static navigatePrevious = new LogicalKeyboardKey(0x00100000d59);
    public static pairing = new LogicalKeyboardKey(0x00100000d5a);
    public static mediaClose = new LogicalKeyboardKey(0x00100000d5b);
    public static audioBassBoostToggle = new LogicalKeyboardKey(0x00100000e02);
    public static audioTrebleDown = new LogicalKeyboardKey(0x00100000e04);
    public static audioTrebleUp = new LogicalKeyboardKey(0x00100000e05);
    public static microphoneToggle = new LogicalKeyboardKey(0x00100000e06);
    public static microphoneVolumeDown = new LogicalKeyboardKey(0x00100000e07);
    public static microphoneVolumeUp = new LogicalKeyboardKey(0x00100000e08);
    public static microphoneVolumeMute = new LogicalKeyboardKey(0x00100000e09);
    public static speechCorrectionList = new LogicalKeyboardKey(0x00100000f01);
    public static speechInputToggle = new LogicalKeyboardKey(0x00100000f02);
    public static appSwitch = new LogicalKeyboardKey(0x00100001001);
    public static call = new LogicalKeyboardKey(0x00100001002);
    public static cameraFocus = new LogicalKeyboardKey(0x00100001003);
    public static endCall = new LogicalKeyboardKey(0x00100001004);
    public static goBack = new LogicalKeyboardKey(0x00100001005);
    public static goHome = new LogicalKeyboardKey(0x00100001006);
    public static headsetHook = new LogicalKeyboardKey(0x00100001007);
    public static lastNumberRedial = new LogicalKeyboardKey(0x00100001008);
    public static notification = new LogicalKeyboardKey(0x00100001009);
    public static mannerMode = new LogicalKeyboardKey(0x0010000100a);
    public static voiceDial = new LogicalKeyboardKey(0x0010000100b);
    public static tv3DMode = new LogicalKeyboardKey(0x00100001101);
    public static tvAntennaCable = new LogicalKeyboardKey(0x00100001102);
    public static tvAudioDescription = new LogicalKeyboardKey(0x00100001103);
    public static tvAudioDescriptionMixDown = new LogicalKeyboardKey(
        0x00100001104
    );
    public static tvAudioDescriptionMixUp = new LogicalKeyboardKey(
        0x00100001105
    );
    public static tvContentsMenu = new LogicalKeyboardKey(0x00100001106);
    public static tvDataService = new LogicalKeyboardKey(0x00100001107);
    public static tvInputComponent1 = new LogicalKeyboardKey(0x00100001108);
    public static tvInputComponent2 = new LogicalKeyboardKey(0x00100001109);
    public static tvInputComposite1 = new LogicalKeyboardKey(0x0010000110a);
    public static tvInputComposite2 = new LogicalKeyboardKey(0x0010000110b);
    public static tvInputHDMI1 = new LogicalKeyboardKey(0x0010000110c);
    public static tvInputHDMI2 = new LogicalKeyboardKey(0x0010000110d);
    public static tvInputHDMI3 = new LogicalKeyboardKey(0x0010000110e);
    public static tvInputHDMI4 = new LogicalKeyboardKey(0x0010000110f);
    public static tvInputVGA1 = new LogicalKeyboardKey(0x00100001110);
    public static tvMediaContext = new LogicalKeyboardKey(0x00100001111);
    public static tvNetwork = new LogicalKeyboardKey(0x00100001112);
    public static tvNumberEntry = new LogicalKeyboardKey(0x00100001113);
    public static tvRadioService = new LogicalKeyboardKey(0x00100001114);
    public static tvSatellite = new LogicalKeyboardKey(0x00100001115);
    public static tvSatelliteBS = new LogicalKeyboardKey(0x00100001116);
    public static tvSatelliteCS = new LogicalKeyboardKey(0x00100001117);
    public static tvSatelliteToggle = new LogicalKeyboardKey(0x00100001118);
    public static tvTerrestrialAnalog = new LogicalKeyboardKey(0x00100001119);
    public static tvTerrestrialDigital = new LogicalKeyboardKey(0x0010000111a);
    public static tvTimer = new LogicalKeyboardKey(0x0010000111b);
    public static key11 = new LogicalKeyboardKey(0x00100001201);
    public static key12 = new LogicalKeyboardKey(0x00100001202);
    public static suspend = new LogicalKeyboardKey(0x00200000000);
    public static resume = new LogicalKeyboardKey(0x00200000001);
    public static sleep = new LogicalKeyboardKey(0x00200000002);
    public static abort = new LogicalKeyboardKey(0x00200000003);
    public static lang1 = new LogicalKeyboardKey(0x00200000010);
    public static lang2 = new LogicalKeyboardKey(0x00200000011);
    public static lang3 = new LogicalKeyboardKey(0x00200000012);
    public static lang4 = new LogicalKeyboardKey(0x00200000013);
    public static lang5 = new LogicalKeyboardKey(0x00200000014);
    public static intlBackslash = new LogicalKeyboardKey(0x00200000020);
    public static intlRo = new LogicalKeyboardKey(0x00200000021);
    public static intlYen = new LogicalKeyboardKey(0x00200000022);
    public static controlLeft = new LogicalKeyboardKey(0x00200000100);
    public static controlRight = new LogicalKeyboardKey(0x00200000101);
    public static shiftLeft = new LogicalKeyboardKey(0x00200000102);
    public static shiftRight = new LogicalKeyboardKey(0x00200000103);
    public static altLeft = new LogicalKeyboardKey(0x00200000104);
    public static altRight = new LogicalKeyboardKey(0x00200000105);
    public static metaLeft = new LogicalKeyboardKey(0x00200000106);
    public static metaRight = new LogicalKeyboardKey(0x00200000107);
    public static control = new LogicalKeyboardKey(0x002000001f0);
    public static shift = new LogicalKeyboardKey(0x002000001f2);
    public static alt = new LogicalKeyboardKey(0x002000001f4);
    public static meta = new LogicalKeyboardKey(0x002000001f6);
    public static numpadEnter = new LogicalKeyboardKey(0x0020000020d);
    public static numpadParenLeft = new LogicalKeyboardKey(0x00200000228);
    public static numpadParenRight = new LogicalKeyboardKey(0x00200000229);
    public static numpadMultiply = new LogicalKeyboardKey(0x0020000022a);
    public static numpadAdd = new LogicalKeyboardKey(0x0020000022b);
    public static numpadComma = new LogicalKeyboardKey(0x0020000022c);
    public static numpadSubtract = new LogicalKeyboardKey(0x0020000022d);
    public static numpadDecimal = new LogicalKeyboardKey(0x0020000022e);
    public static numpadDivide = new LogicalKeyboardKey(0x0020000022f);
    public static numpad0 = new LogicalKeyboardKey(0x00200000230);
    public static numpad1 = new LogicalKeyboardKey(0x00200000231);
    public static numpad2 = new LogicalKeyboardKey(0x00200000232);
    public static numpad3 = new LogicalKeyboardKey(0x00200000233);
    public static numpad4 = new LogicalKeyboardKey(0x00200000234);
    public static numpad5 = new LogicalKeyboardKey(0x00200000235);
    public static numpad6 = new LogicalKeyboardKey(0x00200000236);
    public static numpad7 = new LogicalKeyboardKey(0x00200000237);
    public static numpad8 = new LogicalKeyboardKey(0x00200000238);
    public static numpad9 = new LogicalKeyboardKey(0x00200000239);
    public static numpadEqual = new LogicalKeyboardKey(0x0020000023d);
    public static gameButton1 = new LogicalKeyboardKey(0x00200000301);
    public static gameButton2 = new LogicalKeyboardKey(0x00200000302);
    public static gameButton3 = new LogicalKeyboardKey(0x00200000303);
    public static gameButton4 = new LogicalKeyboardKey(0x00200000304);
    public static gameButton5 = new LogicalKeyboardKey(0x00200000305);
    public static gameButton6 = new LogicalKeyboardKey(0x00200000306);
    public static gameButton7 = new LogicalKeyboardKey(0x00200000307);
    public static gameButton8 = new LogicalKeyboardKey(0x00200000308);
    public static gameButton9 = new LogicalKeyboardKey(0x00200000309);
    public static gameButton10 = new LogicalKeyboardKey(0x0020000030a);
    public static gameButton11 = new LogicalKeyboardKey(0x0020000030b);
    public static gameButton12 = new LogicalKeyboardKey(0x0020000030c);
    public static gameButton13 = new LogicalKeyboardKey(0x0020000030d);
    public static gameButton14 = new LogicalKeyboardKey(0x0020000030e);
    public static gameButton15 = new LogicalKeyboardKey(0x0020000030f);
    public static gameButton16 = new LogicalKeyboardKey(0x00200000310);
    public static gameButtonA = new LogicalKeyboardKey(0x00200000311);
    public static gameButtonB = new LogicalKeyboardKey(0x00200000312);
    public static gameButtonC = new LogicalKeyboardKey(0x00200000313);
    public static gameButtonLeft1 = new LogicalKeyboardKey(0x00200000314);
    public static gameButtonLeft2 = new LogicalKeyboardKey(0x00200000315);
    public static gameButtonMode = new LogicalKeyboardKey(0x00200000316);
    public static gameButtonRight1 = new LogicalKeyboardKey(0x00200000317);
    public static gameButtonRight2 = new LogicalKeyboardKey(0x00200000318);
    public static gameButtonSelect = new LogicalKeyboardKey(0x00200000319);
    public static gameButtonStart = new LogicalKeyboardKey(0x0020000031a);
    public static gameButtonThumbLeft = new LogicalKeyboardKey(0x0020000031b);
    public static gameButtonThumbRight = new LogicalKeyboardKey(0x0020000031c);
    public static gameButtonX = new LogicalKeyboardKey(0x0020000031d);
    public static gameButtonY = new LogicalKeyboardKey(0x0020000031e);
    public static gameButtonZ = new LogicalKeyboardKey(0x0020000031f);
    public static _knownLogicalKeys = Map.fromEntries(
        <IIterable<IMapEntry<number, ILogicalKeyboardKey>>>(
            (<unknown>(
                List.fromArray([
                    new MapEntry(0x00000000020, LogicalKeyboardKey.space),
                    new MapEntry(0x00000000021, LogicalKeyboardKey.exclamation),
                    new MapEntry(0x00000000022, LogicalKeyboardKey.quote),
                    new MapEntry(0x00000000023, LogicalKeyboardKey.numberSign),
                    new MapEntry(0x00000000024, LogicalKeyboardKey.dollar),
                    new MapEntry(0x00000000025, LogicalKeyboardKey.percent),
                    new MapEntry(0x00000000026, LogicalKeyboardKey.ampersand),
                    new MapEntry(0x00000000027, LogicalKeyboardKey.quoteSingle),
                    new MapEntry(
                        0x00000000028,
                        LogicalKeyboardKey.parenthesisLeft
                    ),
                    new MapEntry(
                        0x00000000029,
                        LogicalKeyboardKey.parenthesisRight
                    ),
                    new MapEntry(0x0000000002a, LogicalKeyboardKey.asterisk),
                    new MapEntry(0x0000000002b, LogicalKeyboardKey.add),
                    new MapEntry(0x0000000002c, LogicalKeyboardKey.comma),
                    new MapEntry(0x0000000002d, LogicalKeyboardKey.minus),
                    new MapEntry(0x0000000002e, LogicalKeyboardKey.period),
                    new MapEntry(0x0000000002f, LogicalKeyboardKey.slash),
                    new MapEntry(0x00000000030, LogicalKeyboardKey.digit0),
                    new MapEntry(0x00000000031, LogicalKeyboardKey.digit1),
                    new MapEntry(0x00000000032, LogicalKeyboardKey.digit2),
                    new MapEntry(0x00000000033, LogicalKeyboardKey.digit3),
                    new MapEntry(0x00000000034, LogicalKeyboardKey.digit4),
                    new MapEntry(0x00000000035, LogicalKeyboardKey.digit5),
                    new MapEntry(0x00000000036, LogicalKeyboardKey.digit6),
                    new MapEntry(0x00000000037, LogicalKeyboardKey.digit7),
                    new MapEntry(0x00000000038, LogicalKeyboardKey.digit8),
                    new MapEntry(0x00000000039, LogicalKeyboardKey.digit9),
                    new MapEntry(0x0000000003a, LogicalKeyboardKey.colon),
                    new MapEntry(0x0000000003b, LogicalKeyboardKey.semicolon),
                    new MapEntry(0x0000000003c, LogicalKeyboardKey.less),
                    new MapEntry(0x0000000003d, LogicalKeyboardKey.equal),
                    new MapEntry(0x0000000003e, LogicalKeyboardKey.greater),
                    new MapEntry(0x0000000003f, LogicalKeyboardKey.question),
                    new MapEntry(0x00000000040, LogicalKeyboardKey.at),
                    new MapEntry(0x0000000005b, LogicalKeyboardKey.bracketLeft),
                    new MapEntry(0x0000000005c, LogicalKeyboardKey.backslash),
                    new MapEntry(
                        0x0000000005d,
                        LogicalKeyboardKey.bracketRight
                    ),
                    new MapEntry(0x0000000005e, LogicalKeyboardKey.caret),
                    new MapEntry(0x0000000005f, LogicalKeyboardKey.underscore),
                    new MapEntry(0x00000000060, LogicalKeyboardKey.backquote),
                    new MapEntry(0x00000000061, LogicalKeyboardKey.keyA),
                    new MapEntry(0x00000000062, LogicalKeyboardKey.keyB),
                    new MapEntry(0x00000000063, LogicalKeyboardKey.keyC),
                    new MapEntry(0x00000000064, LogicalKeyboardKey.keyD),
                    new MapEntry(0x00000000065, LogicalKeyboardKey.keyE),
                    new MapEntry(0x00000000066, LogicalKeyboardKey.keyF),
                    new MapEntry(0x00000000067, LogicalKeyboardKey.keyG),
                    new MapEntry(0x00000000068, LogicalKeyboardKey.keyH),
                    new MapEntry(0x00000000069, LogicalKeyboardKey.keyI),
                    new MapEntry(0x0000000006a, LogicalKeyboardKey.keyJ),
                    new MapEntry(0x0000000006b, LogicalKeyboardKey.keyK),
                    new MapEntry(0x0000000006c, LogicalKeyboardKey.keyL),
                    new MapEntry(0x0000000006d, LogicalKeyboardKey.keyM),
                    new MapEntry(0x0000000006e, LogicalKeyboardKey.keyN),
                    new MapEntry(0x0000000006f, LogicalKeyboardKey.keyO),
                    new MapEntry(0x00000000070, LogicalKeyboardKey.keyP),
                    new MapEntry(0x00000000071, LogicalKeyboardKey.keyQ),
                    new MapEntry(0x00000000072, LogicalKeyboardKey.keyR),
                    new MapEntry(0x00000000073, LogicalKeyboardKey.keyS),
                    new MapEntry(0x00000000074, LogicalKeyboardKey.keyT),
                    new MapEntry(0x00000000075, LogicalKeyboardKey.keyU),
                    new MapEntry(0x00000000076, LogicalKeyboardKey.keyV),
                    new MapEntry(0x00000000077, LogicalKeyboardKey.keyW),
                    new MapEntry(0x00000000078, LogicalKeyboardKey.keyX),
                    new MapEntry(0x00000000079, LogicalKeyboardKey.keyY),
                    new MapEntry(0x0000000007a, LogicalKeyboardKey.keyZ),
                    new MapEntry(0x0000000007b, LogicalKeyboardKey.braceLeft),
                    new MapEntry(0x0000000007c, LogicalKeyboardKey.bar),
                    new MapEntry(0x0000000007d, LogicalKeyboardKey.braceRight),
                    new MapEntry(0x0000000007e, LogicalKeyboardKey.tilde),
                    new MapEntry(
                        0x00100000001,
                        LogicalKeyboardKey.unidentified
                    ),
                    new MapEntry(0x00100000008, LogicalKeyboardKey.backspace),
                    new MapEntry(0x00100000009, LogicalKeyboardKey.tab),
                    new MapEntry(0x0010000000d, LogicalKeyboardKey.enter),
                    new MapEntry(0x0010000001b, LogicalKeyboardKey.escape),
                    new MapEntry(0x0010000007f, LogicalKeyboardKey.delete),
                    new MapEntry(0x00100000101, LogicalKeyboardKey.accel),
                    new MapEntry(0x00100000103, LogicalKeyboardKey.altGraph),
                    new MapEntry(0x00100000104, LogicalKeyboardKey.capsLock),
                    new MapEntry(0x00100000106, LogicalKeyboardKey.fn),
                    new MapEntry(0x00100000107, LogicalKeyboardKey.fnLock),
                    new MapEntry(0x00100000108, LogicalKeyboardKey.hyper),
                    new MapEntry(0x0010000010a, LogicalKeyboardKey.numLock),
                    new MapEntry(0x0010000010c, LogicalKeyboardKey.scrollLock),
                    new MapEntry(0x0010000010e, LogicalKeyboardKey.superKey),
                    new MapEntry(0x0010000010f, LogicalKeyboardKey.symbol),
                    new MapEntry(0x00100000110, LogicalKeyboardKey.symbolLock),
                    new MapEntry(0x00100000111, LogicalKeyboardKey.shiftLevel5),
                    new MapEntry(0x00100000301, LogicalKeyboardKey.arrowDown),
                    new MapEntry(0x00100000302, LogicalKeyboardKey.arrowLeft),
                    new MapEntry(0x00100000303, LogicalKeyboardKey.arrowRight),
                    new MapEntry(0x00100000304, LogicalKeyboardKey.arrowUp),
                    new MapEntry(0x00100000305, LogicalKeyboardKey.end),
                    new MapEntry(0x00100000306, LogicalKeyboardKey.home),
                    new MapEntry(0x00100000307, LogicalKeyboardKey.pageDown),
                    new MapEntry(0x00100000308, LogicalKeyboardKey.pageUp),
                    new MapEntry(0x00100000401, LogicalKeyboardKey.clear),
                    new MapEntry(0x00100000402, LogicalKeyboardKey.copy),
                    new MapEntry(0x00100000403, LogicalKeyboardKey.crSel),
                    new MapEntry(0x00100000404, LogicalKeyboardKey.cut),
                    new MapEntry(0x00100000405, LogicalKeyboardKey.eraseEof),
                    new MapEntry(0x00100000406, LogicalKeyboardKey.exSel),
                    new MapEntry(0x00100000407, LogicalKeyboardKey.insert),
                    new MapEntry(0x00100000408, LogicalKeyboardKey.paste),
                    new MapEntry(0x00100000409, LogicalKeyboardKey.redo),
                    new MapEntry(0x0010000040a, LogicalKeyboardKey.undo),
                    new MapEntry(0x00100000501, LogicalKeyboardKey.accept),
                    new MapEntry(0x00100000502, LogicalKeyboardKey.again),
                    new MapEntry(0x00100000503, LogicalKeyboardKey.attn),
                    new MapEntry(0x00100000504, LogicalKeyboardKey.cancel),
                    new MapEntry(0x00100000505, LogicalKeyboardKey.contextMenu),
                    new MapEntry(0x00100000506, LogicalKeyboardKey.execute),
                    new MapEntry(0x00100000507, LogicalKeyboardKey.find),
                    new MapEntry(0x00100000508, LogicalKeyboardKey.help),
                    new MapEntry(0x00100000509, LogicalKeyboardKey.pause),
                    new MapEntry(0x0010000050a, LogicalKeyboardKey.play),
                    new MapEntry(0x0010000050b, LogicalKeyboardKey.props),
                    new MapEntry(0x0010000050c, LogicalKeyboardKey.select),
                    new MapEntry(0x0010000050d, LogicalKeyboardKey.zoomIn),
                    new MapEntry(0x0010000050e, LogicalKeyboardKey.zoomOut),
                    new MapEntry(
                        0x00100000601,
                        LogicalKeyboardKey.brightnessDown
                    ),
                    new MapEntry(
                        0x00100000602,
                        LogicalKeyboardKey.brightnessUp
                    ),
                    new MapEntry(0x00100000603, LogicalKeyboardKey.camera),
                    new MapEntry(0x00100000604, LogicalKeyboardKey.eject),
                    new MapEntry(0x00100000605, LogicalKeyboardKey.logOff),
                    new MapEntry(0x00100000606, LogicalKeyboardKey.power),
                    new MapEntry(0x00100000607, LogicalKeyboardKey.powerOff),
                    new MapEntry(0x00100000608, LogicalKeyboardKey.printScreen),
                    new MapEntry(0x00100000609, LogicalKeyboardKey.hibernate),
                    new MapEntry(0x0010000060a, LogicalKeyboardKey.standby),
                    new MapEntry(0x0010000060b, LogicalKeyboardKey.wakeUp),
                    new MapEntry(
                        0x00100000701,
                        LogicalKeyboardKey.allCandidates
                    ),
                    new MapEntry(
                        0x00100000702,
                        LogicalKeyboardKey.alphanumeric
                    ),
                    new MapEntry(0x00100000703, LogicalKeyboardKey.codeInput),
                    new MapEntry(0x00100000704, LogicalKeyboardKey.compose),
                    new MapEntry(0x00100000705, LogicalKeyboardKey.convert),
                    new MapEntry(0x00100000706, LogicalKeyboardKey.finalMode),
                    new MapEntry(0x00100000707, LogicalKeyboardKey.groupFirst),
                    new MapEntry(0x00100000708, LogicalKeyboardKey.groupLast),
                    new MapEntry(0x00100000709, LogicalKeyboardKey.groupNext),
                    new MapEntry(
                        0x0010000070a,
                        LogicalKeyboardKey.groupPrevious
                    ),
                    new MapEntry(0x0010000070b, LogicalKeyboardKey.modeChange),
                    new MapEntry(
                        0x0010000070c,
                        LogicalKeyboardKey.nextCandidate
                    ),
                    new MapEntry(0x0010000070d, LogicalKeyboardKey.nonConvert),
                    new MapEntry(
                        0x0010000070e,
                        LogicalKeyboardKey.previousCandidate
                    ),
                    new MapEntry(0x0010000070f, LogicalKeyboardKey.process),
                    new MapEntry(
                        0x00100000710,
                        LogicalKeyboardKey.singleCandidate
                    ),
                    new MapEntry(0x00100000711, LogicalKeyboardKey.hangulMode),
                    new MapEntry(0x00100000712, LogicalKeyboardKey.hanjaMode),
                    new MapEntry(0x00100000713, LogicalKeyboardKey.junjaMode),
                    new MapEntry(0x00100000714, LogicalKeyboardKey.eisu),
                    new MapEntry(0x00100000715, LogicalKeyboardKey.hankaku),
                    new MapEntry(0x00100000716, LogicalKeyboardKey.hiragana),
                    new MapEntry(
                        0x00100000717,
                        LogicalKeyboardKey.hiraganaKatakana
                    ),
                    new MapEntry(0x00100000718, LogicalKeyboardKey.kanaMode),
                    new MapEntry(0x00100000719, LogicalKeyboardKey.kanjiMode),
                    new MapEntry(0x0010000071a, LogicalKeyboardKey.katakana),
                    new MapEntry(0x0010000071b, LogicalKeyboardKey.romaji),
                    new MapEntry(0x0010000071c, LogicalKeyboardKey.zenkaku),
                    new MapEntry(
                        0x0010000071d,
                        LogicalKeyboardKey.zenkakuHankaku
                    ),
                    new MapEntry(0x00100000801, LogicalKeyboardKey.f1),
                    new MapEntry(0x00100000802, LogicalKeyboardKey.f2),
                    new MapEntry(0x00100000803, LogicalKeyboardKey.f3),
                    new MapEntry(0x00100000804, LogicalKeyboardKey.f4),
                    new MapEntry(0x00100000805, LogicalKeyboardKey.f5),
                    new MapEntry(0x00100000806, LogicalKeyboardKey.f6),
                    new MapEntry(0x00100000807, LogicalKeyboardKey.f7),
                    new MapEntry(0x00100000808, LogicalKeyboardKey.f8),
                    new MapEntry(0x00100000809, LogicalKeyboardKey.f9),
                    new MapEntry(0x0010000080a, LogicalKeyboardKey.f10),
                    new MapEntry(0x0010000080b, LogicalKeyboardKey.f11),
                    new MapEntry(0x0010000080c, LogicalKeyboardKey.f12),
                    new MapEntry(0x0010000080d, LogicalKeyboardKey.f13),
                    new MapEntry(0x0010000080e, LogicalKeyboardKey.f14),
                    new MapEntry(0x0010000080f, LogicalKeyboardKey.f15),
                    new MapEntry(0x00100000810, LogicalKeyboardKey.f16),
                    new MapEntry(0x00100000811, LogicalKeyboardKey.f17),
                    new MapEntry(0x00100000812, LogicalKeyboardKey.f18),
                    new MapEntry(0x00100000813, LogicalKeyboardKey.f19),
                    new MapEntry(0x00100000814, LogicalKeyboardKey.f20),
                    new MapEntry(0x00100000815, LogicalKeyboardKey.f21),
                    new MapEntry(0x00100000816, LogicalKeyboardKey.f22),
                    new MapEntry(0x00100000817, LogicalKeyboardKey.f23),
                    new MapEntry(0x00100000818, LogicalKeyboardKey.f24),
                    new MapEntry(0x00100000901, LogicalKeyboardKey.soft1),
                    new MapEntry(0x00100000902, LogicalKeyboardKey.soft2),
                    new MapEntry(0x00100000903, LogicalKeyboardKey.soft3),
                    new MapEntry(0x00100000904, LogicalKeyboardKey.soft4),
                    new MapEntry(0x00100000905, LogicalKeyboardKey.soft5),
                    new MapEntry(0x00100000906, LogicalKeyboardKey.soft6),
                    new MapEntry(0x00100000907, LogicalKeyboardKey.soft7),
                    new MapEntry(0x00100000908, LogicalKeyboardKey.soft8),
                    new MapEntry(0x00100000a01, LogicalKeyboardKey.close),
                    new MapEntry(0x00100000a02, LogicalKeyboardKey.mailForward),
                    new MapEntry(0x00100000a03, LogicalKeyboardKey.mailReply),
                    new MapEntry(0x00100000a04, LogicalKeyboardKey.mailSend),
                    new MapEntry(
                        0x00100000a05,
                        LogicalKeyboardKey.mediaPlayPause
                    ),
                    new MapEntry(0x00100000a07, LogicalKeyboardKey.mediaStop),
                    new MapEntry(
                        0x00100000a08,
                        LogicalKeyboardKey.mediaTrackNext
                    ),
                    new MapEntry(
                        0x00100000a09,
                        LogicalKeyboardKey.mediaTrackPrevious
                    ),
                    new MapEntry(0x00100000a0a, LogicalKeyboardKey.newKey),
                    new MapEntry(0x00100000a0b, LogicalKeyboardKey.open),
                    new MapEntry(0x00100000a0c, LogicalKeyboardKey.print),
                    new MapEntry(0x00100000a0d, LogicalKeyboardKey.save),
                    new MapEntry(0x00100000a0e, LogicalKeyboardKey.spellCheck),
                    new MapEntry(
                        0x00100000a0f,
                        LogicalKeyboardKey.audioVolumeDown
                    ),
                    new MapEntry(
                        0x00100000a10,
                        LogicalKeyboardKey.audioVolumeUp
                    ),
                    new MapEntry(
                        0x00100000a11,
                        LogicalKeyboardKey.audioVolumeMute
                    ),
                    new MapEntry(
                        0x00100000b01,
                        LogicalKeyboardKey.launchApplication2
                    ),
                    new MapEntry(
                        0x00100000b02,
                        LogicalKeyboardKey.launchCalendar
                    ),
                    new MapEntry(0x00100000b03, LogicalKeyboardKey.launchMail),
                    new MapEntry(
                        0x00100000b04,
                        LogicalKeyboardKey.launchMediaPlayer
                    ),
                    new MapEntry(
                        0x00100000b05,
                        LogicalKeyboardKey.launchMusicPlayer
                    ),
                    new MapEntry(
                        0x00100000b06,
                        LogicalKeyboardKey.launchApplication1
                    ),
                    new MapEntry(
                        0x00100000b07,
                        LogicalKeyboardKey.launchScreenSaver
                    ),
                    new MapEntry(
                        0x00100000b08,
                        LogicalKeyboardKey.launchSpreadsheet
                    ),
                    new MapEntry(
                        0x00100000b09,
                        LogicalKeyboardKey.launchWebBrowser
                    ),
                    new MapEntry(
                        0x00100000b0a,
                        LogicalKeyboardKey.launchWebCam
                    ),
                    new MapEntry(
                        0x00100000b0b,
                        LogicalKeyboardKey.launchWordProcessor
                    ),
                    new MapEntry(
                        0x00100000b0c,
                        LogicalKeyboardKey.launchContacts
                    ),
                    new MapEntry(0x00100000b0d, LogicalKeyboardKey.launchPhone),
                    new MapEntry(
                        0x00100000b0e,
                        LogicalKeyboardKey.launchAssistant
                    ),
                    new MapEntry(
                        0x00100000b0f,
                        LogicalKeyboardKey.launchControlPanel
                    ),
                    new MapEntry(0x00100000c01, LogicalKeyboardKey.browserBack),
                    new MapEntry(
                        0x00100000c02,
                        LogicalKeyboardKey.browserFavorites
                    ),
                    new MapEntry(
                        0x00100000c03,
                        LogicalKeyboardKey.browserForward
                    ),
                    new MapEntry(0x00100000c04, LogicalKeyboardKey.browserHome),
                    new MapEntry(
                        0x00100000c05,
                        LogicalKeyboardKey.browserRefresh
                    ),
                    new MapEntry(
                        0x00100000c06,
                        LogicalKeyboardKey.browserSearch
                    ),
                    new MapEntry(0x00100000c07, LogicalKeyboardKey.browserStop),
                    new MapEntry(
                        0x00100000d01,
                        LogicalKeyboardKey.audioBalanceLeft
                    ),
                    new MapEntry(
                        0x00100000d02,
                        LogicalKeyboardKey.audioBalanceRight
                    ),
                    new MapEntry(
                        0x00100000d03,
                        LogicalKeyboardKey.audioBassBoostDown
                    ),
                    new MapEntry(
                        0x00100000d04,
                        LogicalKeyboardKey.audioBassBoostUp
                    ),
                    new MapEntry(
                        0x00100000d05,
                        LogicalKeyboardKey.audioFaderFront
                    ),
                    new MapEntry(
                        0x00100000d06,
                        LogicalKeyboardKey.audioFaderRear
                    ),
                    new MapEntry(
                        0x00100000d07,
                        LogicalKeyboardKey.audioSurroundModeNext
                    ),
                    new MapEntry(0x00100000d08, LogicalKeyboardKey.avrInput),
                    new MapEntry(0x00100000d09, LogicalKeyboardKey.avrPower),
                    new MapEntry(0x00100000d0a, LogicalKeyboardKey.channelDown),
                    new MapEntry(0x00100000d0b, LogicalKeyboardKey.channelUp),
                    new MapEntry(0x00100000d0c, LogicalKeyboardKey.colorF0Red),
                    new MapEntry(
                        0x00100000d0d,
                        LogicalKeyboardKey.colorF1Green
                    ),
                    new MapEntry(
                        0x00100000d0e,
                        LogicalKeyboardKey.colorF2Yellow
                    ),
                    new MapEntry(0x00100000d0f, LogicalKeyboardKey.colorF3Blue),
                    new MapEntry(0x00100000d10, LogicalKeyboardKey.colorF4Grey),
                    new MapEntry(
                        0x00100000d11,
                        LogicalKeyboardKey.colorF5Brown
                    ),
                    new MapEntry(
                        0x00100000d12,
                        LogicalKeyboardKey.closedCaptionToggle
                    ),
                    new MapEntry(0x00100000d13, LogicalKeyboardKey.dimmer),
                    new MapEntry(0x00100000d14, LogicalKeyboardKey.displaySwap),
                    new MapEntry(0x00100000d15, LogicalKeyboardKey.exit),
                    new MapEntry(
                        0x00100000d16,
                        LogicalKeyboardKey.favoriteClear0
                    ),
                    new MapEntry(
                        0x00100000d17,
                        LogicalKeyboardKey.favoriteClear1
                    ),
                    new MapEntry(
                        0x00100000d18,
                        LogicalKeyboardKey.favoriteClear2
                    ),
                    new MapEntry(
                        0x00100000d19,
                        LogicalKeyboardKey.favoriteClear3
                    ),
                    new MapEntry(
                        0x00100000d1a,
                        LogicalKeyboardKey.favoriteRecall0
                    ),
                    new MapEntry(
                        0x00100000d1b,
                        LogicalKeyboardKey.favoriteRecall1
                    ),
                    new MapEntry(
                        0x00100000d1c,
                        LogicalKeyboardKey.favoriteRecall2
                    ),
                    new MapEntry(
                        0x00100000d1d,
                        LogicalKeyboardKey.favoriteRecall3
                    ),
                    new MapEntry(
                        0x00100000d1e,
                        LogicalKeyboardKey.favoriteStore0
                    ),
                    new MapEntry(
                        0x00100000d1f,
                        LogicalKeyboardKey.favoriteStore1
                    ),
                    new MapEntry(
                        0x00100000d20,
                        LogicalKeyboardKey.favoriteStore2
                    ),
                    new MapEntry(
                        0x00100000d21,
                        LogicalKeyboardKey.favoriteStore3
                    ),
                    new MapEntry(0x00100000d22, LogicalKeyboardKey.guide),
                    new MapEntry(
                        0x00100000d23,
                        LogicalKeyboardKey.guideNextDay
                    ),
                    new MapEntry(
                        0x00100000d24,
                        LogicalKeyboardKey.guidePreviousDay
                    ),
                    new MapEntry(0x00100000d25, LogicalKeyboardKey.info),
                    new MapEntry(
                        0x00100000d26,
                        LogicalKeyboardKey.instantReplay
                    ),
                    new MapEntry(0x00100000d27, LogicalKeyboardKey.link),
                    new MapEntry(0x00100000d28, LogicalKeyboardKey.listProgram),
                    new MapEntry(0x00100000d29, LogicalKeyboardKey.liveContent),
                    new MapEntry(0x00100000d2a, LogicalKeyboardKey.lock),
                    new MapEntry(0x00100000d2b, LogicalKeyboardKey.mediaApps),
                    new MapEntry(
                        0x00100000d2c,
                        LogicalKeyboardKey.mediaFastForward
                    ),
                    new MapEntry(0x00100000d2d, LogicalKeyboardKey.mediaLast),
                    new MapEntry(0x00100000d2e, LogicalKeyboardKey.mediaPause),
                    new MapEntry(0x00100000d2f, LogicalKeyboardKey.mediaPlay),
                    new MapEntry(0x00100000d30, LogicalKeyboardKey.mediaRecord),
                    new MapEntry(0x00100000d31, LogicalKeyboardKey.mediaRewind),
                    new MapEntry(0x00100000d32, LogicalKeyboardKey.mediaSkip),
                    new MapEntry(
                        0x00100000d33,
                        LogicalKeyboardKey.nextFavoriteChannel
                    ),
                    new MapEntry(
                        0x00100000d34,
                        LogicalKeyboardKey.nextUserProfile
                    ),
                    new MapEntry(0x00100000d35, LogicalKeyboardKey.onDemand),
                    new MapEntry(0x00100000d36, LogicalKeyboardKey.pInPDown),
                    new MapEntry(0x00100000d37, LogicalKeyboardKey.pInPMove),
                    new MapEntry(0x00100000d38, LogicalKeyboardKey.pInPToggle),
                    new MapEntry(0x00100000d39, LogicalKeyboardKey.pInPUp),
                    new MapEntry(
                        0x00100000d3a,
                        LogicalKeyboardKey.playSpeedDown
                    ),
                    new MapEntry(
                        0x00100000d3b,
                        LogicalKeyboardKey.playSpeedReset
                    ),
                    new MapEntry(0x00100000d3c, LogicalKeyboardKey.playSpeedUp),
                    new MapEntry(
                        0x00100000d3d,
                        LogicalKeyboardKey.randomToggle
                    ),
                    new MapEntry(
                        0x00100000d3e,
                        LogicalKeyboardKey.rcLowBattery
                    ),
                    new MapEntry(
                        0x00100000d3f,
                        LogicalKeyboardKey.recordSpeedNext
                    ),
                    new MapEntry(0x00100000d40, LogicalKeyboardKey.rfBypass),
                    new MapEntry(
                        0x00100000d41,
                        LogicalKeyboardKey.scanChannelsToggle
                    ),
                    new MapEntry(
                        0x00100000d42,
                        LogicalKeyboardKey.screenModeNext
                    ),
                    new MapEntry(0x00100000d43, LogicalKeyboardKey.settings),
                    new MapEntry(
                        0x00100000d44,
                        LogicalKeyboardKey.splitScreenToggle
                    ),
                    new MapEntry(0x00100000d45, LogicalKeyboardKey.stbInput),
                    new MapEntry(0x00100000d46, LogicalKeyboardKey.stbPower),
                    new MapEntry(0x00100000d47, LogicalKeyboardKey.subtitle),
                    new MapEntry(0x00100000d48, LogicalKeyboardKey.teletext),
                    new MapEntry(0x00100000d49, LogicalKeyboardKey.tv),
                    new MapEntry(0x00100000d4a, LogicalKeyboardKey.tvInput),
                    new MapEntry(0x00100000d4b, LogicalKeyboardKey.tvPower),
                    new MapEntry(
                        0x00100000d4c,
                        LogicalKeyboardKey.videoModeNext
                    ),
                    new MapEntry(0x00100000d4d, LogicalKeyboardKey.wink),
                    new MapEntry(0x00100000d4e, LogicalKeyboardKey.zoomToggle),
                    new MapEntry(0x00100000d4f, LogicalKeyboardKey.dvr),
                    new MapEntry(
                        0x00100000d50,
                        LogicalKeyboardKey.mediaAudioTrack
                    ),
                    new MapEntry(
                        0x00100000d51,
                        LogicalKeyboardKey.mediaSkipBackward
                    ),
                    new MapEntry(
                        0x00100000d52,
                        LogicalKeyboardKey.mediaSkipForward
                    ),
                    new MapEntry(
                        0x00100000d53,
                        LogicalKeyboardKey.mediaStepBackward
                    ),
                    new MapEntry(
                        0x00100000d54,
                        LogicalKeyboardKey.mediaStepForward
                    ),
                    new MapEntry(
                        0x00100000d55,
                        LogicalKeyboardKey.mediaTopMenu
                    ),
                    new MapEntry(0x00100000d56, LogicalKeyboardKey.navigateIn),
                    new MapEntry(
                        0x00100000d57,
                        LogicalKeyboardKey.navigateNext
                    ),
                    new MapEntry(0x00100000d58, LogicalKeyboardKey.navigateOut),
                    new MapEntry(
                        0x00100000d59,
                        LogicalKeyboardKey.navigatePrevious
                    ),
                    new MapEntry(0x00100000d5a, LogicalKeyboardKey.pairing),
                    new MapEntry(0x00100000d5b, LogicalKeyboardKey.mediaClose),
                    new MapEntry(
                        0x00100000e02,
                        LogicalKeyboardKey.audioBassBoostToggle
                    ),
                    new MapEntry(
                        0x00100000e04,
                        LogicalKeyboardKey.audioTrebleDown
                    ),
                    new MapEntry(
                        0x00100000e05,
                        LogicalKeyboardKey.audioTrebleUp
                    ),
                    new MapEntry(
                        0x00100000e06,
                        LogicalKeyboardKey.microphoneToggle
                    ),
                    new MapEntry(
                        0x00100000e07,
                        LogicalKeyboardKey.microphoneVolumeDown
                    ),
                    new MapEntry(
                        0x00100000e08,
                        LogicalKeyboardKey.microphoneVolumeUp
                    ),
                    new MapEntry(
                        0x00100000e09,
                        LogicalKeyboardKey.microphoneVolumeMute
                    ),
                    new MapEntry(
                        0x00100000f01,
                        LogicalKeyboardKey.speechCorrectionList
                    ),
                    new MapEntry(
                        0x00100000f02,
                        LogicalKeyboardKey.speechInputToggle
                    ),
                    new MapEntry(0x00100001001, LogicalKeyboardKey.appSwitch),
                    new MapEntry(0x00100001002, LogicalKeyboardKey.call),
                    new MapEntry(0x00100001003, LogicalKeyboardKey.cameraFocus),
                    new MapEntry(0x00100001004, LogicalKeyboardKey.endCall),
                    new MapEntry(0x00100001005, LogicalKeyboardKey.goBack),
                    new MapEntry(0x00100001006, LogicalKeyboardKey.goHome),
                    new MapEntry(0x00100001007, LogicalKeyboardKey.headsetHook),
                    new MapEntry(
                        0x00100001008,
                        LogicalKeyboardKey.lastNumberRedial
                    ),
                    new MapEntry(
                        0x00100001009,
                        LogicalKeyboardKey.notification
                    ),
                    new MapEntry(0x0010000100a, LogicalKeyboardKey.mannerMode),
                    new MapEntry(0x0010000100b, LogicalKeyboardKey.voiceDial),
                    new MapEntry(0x00100001101, LogicalKeyboardKey.tv3DMode),
                    new MapEntry(
                        0x00100001102,
                        LogicalKeyboardKey.tvAntennaCable
                    ),
                    new MapEntry(
                        0x00100001103,
                        LogicalKeyboardKey.tvAudioDescription
                    ),
                    new MapEntry(
                        0x00100001104,
                        LogicalKeyboardKey.tvAudioDescriptionMixDown
                    ),
                    new MapEntry(
                        0x00100001105,
                        LogicalKeyboardKey.tvAudioDescriptionMixUp
                    ),
                    new MapEntry(
                        0x00100001106,
                        LogicalKeyboardKey.tvContentsMenu
                    ),
                    new MapEntry(
                        0x00100001107,
                        LogicalKeyboardKey.tvDataService
                    ),
                    new MapEntry(
                        0x00100001108,
                        LogicalKeyboardKey.tvInputComponent1
                    ),
                    new MapEntry(
                        0x00100001109,
                        LogicalKeyboardKey.tvInputComponent2
                    ),
                    new MapEntry(
                        0x0010000110a,
                        LogicalKeyboardKey.tvInputComposite1
                    ),
                    new MapEntry(
                        0x0010000110b,
                        LogicalKeyboardKey.tvInputComposite2
                    ),
                    new MapEntry(
                        0x0010000110c,
                        LogicalKeyboardKey.tvInputHDMI1
                    ),
                    new MapEntry(
                        0x0010000110d,
                        LogicalKeyboardKey.tvInputHDMI2
                    ),
                    new MapEntry(
                        0x0010000110e,
                        LogicalKeyboardKey.tvInputHDMI3
                    ),
                    new MapEntry(
                        0x0010000110f,
                        LogicalKeyboardKey.tvInputHDMI4
                    ),
                    new MapEntry(0x00100001110, LogicalKeyboardKey.tvInputVGA1),
                    new MapEntry(
                        0x00100001111,
                        LogicalKeyboardKey.tvMediaContext
                    ),
                    new MapEntry(0x00100001112, LogicalKeyboardKey.tvNetwork),
                    new MapEntry(
                        0x00100001113,
                        LogicalKeyboardKey.tvNumberEntry
                    ),
                    new MapEntry(
                        0x00100001114,
                        LogicalKeyboardKey.tvRadioService
                    ),
                    new MapEntry(0x00100001115, LogicalKeyboardKey.tvSatellite),
                    new MapEntry(
                        0x00100001116,
                        LogicalKeyboardKey.tvSatelliteBS
                    ),
                    new MapEntry(
                        0x00100001117,
                        LogicalKeyboardKey.tvSatelliteCS
                    ),
                    new MapEntry(
                        0x00100001118,
                        LogicalKeyboardKey.tvSatelliteToggle
                    ),
                    new MapEntry(
                        0x00100001119,
                        LogicalKeyboardKey.tvTerrestrialAnalog
                    ),
                    new MapEntry(
                        0x0010000111a,
                        LogicalKeyboardKey.tvTerrestrialDigital
                    ),
                    new MapEntry(0x0010000111b, LogicalKeyboardKey.tvTimer),
                    new MapEntry(0x00100001201, LogicalKeyboardKey.key11),
                    new MapEntry(0x00100001202, LogicalKeyboardKey.key12),
                    new MapEntry(0x00200000000, LogicalKeyboardKey.suspend),
                    new MapEntry(0x00200000001, LogicalKeyboardKey.resume),
                    new MapEntry(0x00200000002, LogicalKeyboardKey.sleep),
                    new MapEntry(0x00200000003, LogicalKeyboardKey.abort),
                    new MapEntry(0x00200000010, LogicalKeyboardKey.lang1),
                    new MapEntry(0x00200000011, LogicalKeyboardKey.lang2),
                    new MapEntry(0x00200000012, LogicalKeyboardKey.lang3),
                    new MapEntry(0x00200000013, LogicalKeyboardKey.lang4),
                    new MapEntry(0x00200000014, LogicalKeyboardKey.lang5),
                    new MapEntry(
                        0x00200000020,
                        LogicalKeyboardKey.intlBackslash
                    ),
                    new MapEntry(0x00200000021, LogicalKeyboardKey.intlRo),
                    new MapEntry(0x00200000022, LogicalKeyboardKey.intlYen),
                    new MapEntry(0x00200000100, LogicalKeyboardKey.controlLeft),
                    new MapEntry(
                        0x00200000101,
                        LogicalKeyboardKey.controlRight
                    ),
                    new MapEntry(0x00200000102, LogicalKeyboardKey.shiftLeft),
                    new MapEntry(0x00200000103, LogicalKeyboardKey.shiftRight),
                    new MapEntry(0x00200000104, LogicalKeyboardKey.altLeft),
                    new MapEntry(0x00200000105, LogicalKeyboardKey.altRight),
                    new MapEntry(0x00200000106, LogicalKeyboardKey.metaLeft),
                    new MapEntry(0x00200000107, LogicalKeyboardKey.metaRight),
                    new MapEntry(0x002000001f0, LogicalKeyboardKey.control),
                    new MapEntry(0x002000001f2, LogicalKeyboardKey.shift),
                    new MapEntry(0x002000001f4, LogicalKeyboardKey.alt),
                    new MapEntry(0x002000001f6, LogicalKeyboardKey.meta),
                    new MapEntry(0x0020000020d, LogicalKeyboardKey.numpadEnter),
                    new MapEntry(
                        0x00200000228,
                        LogicalKeyboardKey.numpadParenLeft
                    ),
                    new MapEntry(
                        0x00200000229,
                        LogicalKeyboardKey.numpadParenRight
                    ),
                    new MapEntry(
                        0x0020000022a,
                        LogicalKeyboardKey.numpadMultiply
                    ),
                    new MapEntry(0x0020000022b, LogicalKeyboardKey.numpadAdd),
                    new MapEntry(0x0020000022c, LogicalKeyboardKey.numpadComma),
                    new MapEntry(
                        0x0020000022d,
                        LogicalKeyboardKey.numpadSubtract
                    ),
                    new MapEntry(
                        0x0020000022e,
                        LogicalKeyboardKey.numpadDecimal
                    ),
                    new MapEntry(
                        0x0020000022f,
                        LogicalKeyboardKey.numpadDivide
                    ),
                    new MapEntry(0x00200000230, LogicalKeyboardKey.numpad0),
                    new MapEntry(0x00200000231, LogicalKeyboardKey.numpad1),
                    new MapEntry(0x00200000232, LogicalKeyboardKey.numpad2),
                    new MapEntry(0x00200000233, LogicalKeyboardKey.numpad3),
                    new MapEntry(0x00200000234, LogicalKeyboardKey.numpad4),
                    new MapEntry(0x00200000235, LogicalKeyboardKey.numpad5),
                    new MapEntry(0x00200000236, LogicalKeyboardKey.numpad6),
                    new MapEntry(0x00200000237, LogicalKeyboardKey.numpad7),
                    new MapEntry(0x00200000238, LogicalKeyboardKey.numpad8),
                    new MapEntry(0x00200000239, LogicalKeyboardKey.numpad9),
                    new MapEntry(0x0020000023d, LogicalKeyboardKey.numpadEqual),
                    new MapEntry(0x00200000301, LogicalKeyboardKey.gameButton1),
                    new MapEntry(0x00200000302, LogicalKeyboardKey.gameButton2),
                    new MapEntry(0x00200000303, LogicalKeyboardKey.gameButton3),
                    new MapEntry(0x00200000304, LogicalKeyboardKey.gameButton4),
                    new MapEntry(0x00200000305, LogicalKeyboardKey.gameButton5),
                    new MapEntry(0x00200000306, LogicalKeyboardKey.gameButton6),
                    new MapEntry(0x00200000307, LogicalKeyboardKey.gameButton7),
                    new MapEntry(0x00200000308, LogicalKeyboardKey.gameButton8),
                    new MapEntry(0x00200000309, LogicalKeyboardKey.gameButton9),
                    new MapEntry(
                        0x0020000030a,
                        LogicalKeyboardKey.gameButton10
                    ),
                    new MapEntry(
                        0x0020000030b,
                        LogicalKeyboardKey.gameButton11
                    ),
                    new MapEntry(
                        0x0020000030c,
                        LogicalKeyboardKey.gameButton12
                    ),
                    new MapEntry(
                        0x0020000030d,
                        LogicalKeyboardKey.gameButton13
                    ),
                    new MapEntry(
                        0x0020000030e,
                        LogicalKeyboardKey.gameButton14
                    ),
                    new MapEntry(
                        0x0020000030f,
                        LogicalKeyboardKey.gameButton15
                    ),
                    new MapEntry(
                        0x00200000310,
                        LogicalKeyboardKey.gameButton16
                    ),
                    new MapEntry(0x00200000311, LogicalKeyboardKey.gameButtonA),
                    new MapEntry(0x00200000312, LogicalKeyboardKey.gameButtonB),
                    new MapEntry(0x00200000313, LogicalKeyboardKey.gameButtonC),
                    new MapEntry(
                        0x00200000314,
                        LogicalKeyboardKey.gameButtonLeft1
                    ),
                    new MapEntry(
                        0x00200000315,
                        LogicalKeyboardKey.gameButtonLeft2
                    ),
                    new MapEntry(
                        0x00200000316,
                        LogicalKeyboardKey.gameButtonMode
                    ),
                    new MapEntry(
                        0x00200000317,
                        LogicalKeyboardKey.gameButtonRight1
                    ),
                    new MapEntry(
                        0x00200000318,
                        LogicalKeyboardKey.gameButtonRight2
                    ),
                    new MapEntry(
                        0x00200000319,
                        LogicalKeyboardKey.gameButtonSelect
                    ),
                    new MapEntry(
                        0x0020000031a,
                        LogicalKeyboardKey.gameButtonStart
                    ),
                    new MapEntry(
                        0x0020000031b,
                        LogicalKeyboardKey.gameButtonThumbLeft
                    ),
                    new MapEntry(
                        0x0020000031c,
                        LogicalKeyboardKey.gameButtonThumbRight
                    ),
                    new MapEntry(0x0020000031d, LogicalKeyboardKey.gameButtonX),
                    new MapEntry(0x0020000031e, LogicalKeyboardKey.gameButtonY),
                    new MapEntry(0x0020000031f, LogicalKeyboardKey.gameButtonZ),
                ])
            ))
        )
    );
    public static _keyLabels = Map.fromEntries(
        <IIterable<IMapEntry<number, string>>>(
            (<unknown>(
                List.fromArray([
                    new MapEntry(0x00000000020, "Space"),
                    new MapEntry(0x00000000021, "Exclamation"),
                    new MapEntry(0x00000000022, "Quote"),
                    new MapEntry(0x00000000023, "Number Sign"),
                    new MapEntry(0x00000000024, "Dollar"),
                    new MapEntry(0x00000000025, "Percent"),
                    new MapEntry(0x00000000026, "Ampersand"),
                    new MapEntry(0x00000000027, "Quote Single"),
                    new MapEntry(0x00000000028, "Parenthesis Left"),
                    new MapEntry(0x00000000029, "Parenthesis Right"),
                    new MapEntry(0x0000000002a, "Asterisk"),
                    new MapEntry(0x0000000002b, "Add"),
                    new MapEntry(0x0000000002c, "Comma"),
                    new MapEntry(0x0000000002d, "Minus"),
                    new MapEntry(0x0000000002e, "Period"),
                    new MapEntry(0x0000000002f, "Slash"),
                    new MapEntry(0x00000000030, "Digit 0"),
                    new MapEntry(0x00000000031, "Digit 1"),
                    new MapEntry(0x00000000032, "Digit 2"),
                    new MapEntry(0x00000000033, "Digit 3"),
                    new MapEntry(0x00000000034, "Digit 4"),
                    new MapEntry(0x00000000035, "Digit 5"),
                    new MapEntry(0x00000000036, "Digit 6"),
                    new MapEntry(0x00000000037, "Digit 7"),
                    new MapEntry(0x00000000038, "Digit 8"),
                    new MapEntry(0x00000000039, "Digit 9"),
                    new MapEntry(0x0000000003a, "Colon"),
                    new MapEntry(0x0000000003b, "Semicolon"),
                    new MapEntry(0x0000000003c, "Less"),
                    new MapEntry(0x0000000003d, "Equal"),
                    new MapEntry(0x0000000003e, "Greater"),
                    new MapEntry(0x0000000003f, "Question"),
                    new MapEntry(0x00000000040, "At"),
                    new MapEntry(0x0000000005b, "Bracket Left"),
                    new MapEntry(0x0000000005c, "Backslash"),
                    new MapEntry(0x0000000005d, "Bracket Right"),
                    new MapEntry(0x0000000005e, "Caret"),
                    new MapEntry(0x0000000005f, "Underscore"),
                    new MapEntry(0x00000000060, "Backquote"),
                    new MapEntry(0x00000000061, "Key A"),
                    new MapEntry(0x00000000062, "Key B"),
                    new MapEntry(0x00000000063, "Key C"),
                    new MapEntry(0x00000000064, "Key D"),
                    new MapEntry(0x00000000065, "Key E"),
                    new MapEntry(0x00000000066, "Key F"),
                    new MapEntry(0x00000000067, "Key G"),
                    new MapEntry(0x00000000068, "Key H"),
                    new MapEntry(0x00000000069, "Key I"),
                    new MapEntry(0x0000000006a, "Key J"),
                    new MapEntry(0x0000000006b, "Key K"),
                    new MapEntry(0x0000000006c, "Key L"),
                    new MapEntry(0x0000000006d, "Key M"),
                    new MapEntry(0x0000000006e, "Key N"),
                    new MapEntry(0x0000000006f, "Key O"),
                    new MapEntry(0x00000000070, "Key P"),
                    new MapEntry(0x00000000071, "Key Q"),
                    new MapEntry(0x00000000072, "Key R"),
                    new MapEntry(0x00000000073, "Key S"),
                    new MapEntry(0x00000000074, "Key T"),
                    new MapEntry(0x00000000075, "Key U"),
                    new MapEntry(0x00000000076, "Key V"),
                    new MapEntry(0x00000000077, "Key W"),
                    new MapEntry(0x00000000078, "Key X"),
                    new MapEntry(0x00000000079, "Key Y"),
                    new MapEntry(0x0000000007a, "Key Z"),
                    new MapEntry(0x0000000007b, "Brace Left"),
                    new MapEntry(0x0000000007c, "Bar"),
                    new MapEntry(0x0000000007d, "Brace Right"),
                    new MapEntry(0x0000000007e, "Tilde"),
                    new MapEntry(0x00100000001, "Unidentified"),
                    new MapEntry(0x00100000008, "Backspace"),
                    new MapEntry(0x00100000009, "Tab"),
                    new MapEntry(0x0010000000d, "Enter"),
                    new MapEntry(0x0010000001b, "Escape"),
                    new MapEntry(0x0010000007f, "Delete"),
                    new MapEntry(0x00100000101, "Accel"),
                    new MapEntry(0x00100000103, "Alt Graph"),
                    new MapEntry(0x00100000104, "Caps Lock"),
                    new MapEntry(0x00100000106, "Fn"),
                    new MapEntry(0x00100000107, "Fn Lock"),
                    new MapEntry(0x00100000108, "Hyper"),
                    new MapEntry(0x0010000010a, "Num Lock"),
                    new MapEntry(0x0010000010c, "Scroll Lock"),
                    new MapEntry(0x0010000010e, "Super"),
                    new MapEntry(0x0010000010f, "Symbol"),
                    new MapEntry(0x00100000110, "Symbol Lock"),
                    new MapEntry(0x00100000111, "Shift Level 5"),
                    new MapEntry(0x00100000301, "Arrow Down"),
                    new MapEntry(0x00100000302, "Arrow Left"),
                    new MapEntry(0x00100000303, "Arrow Right"),
                    new MapEntry(0x00100000304, "Arrow Up"),
                    new MapEntry(0x00100000305, "End"),
                    new MapEntry(0x00100000306, "Home"),
                    new MapEntry(0x00100000307, "Page Down"),
                    new MapEntry(0x00100000308, "Page Up"),
                    new MapEntry(0x00100000401, "Clear"),
                    new MapEntry(0x00100000402, "Copy"),
                    new MapEntry(0x00100000403, "Cr Sel"),
                    new MapEntry(0x00100000404, "Cut"),
                    new MapEntry(0x00100000405, "Erase Eof"),
                    new MapEntry(0x00100000406, "Ex Sel"),
                    new MapEntry(0x00100000407, "Insert"),
                    new MapEntry(0x00100000408, "Paste"),
                    new MapEntry(0x00100000409, "Redo"),
                    new MapEntry(0x0010000040a, "Undo"),
                    new MapEntry(0x00100000501, "Accept"),
                    new MapEntry(0x00100000502, "Again"),
                    new MapEntry(0x00100000503, "Attn"),
                    new MapEntry(0x00100000504, "Cancel"),
                    new MapEntry(0x00100000505, "Context Menu"),
                    new MapEntry(0x00100000506, "Execute"),
                    new MapEntry(0x00100000507, "Find"),
                    new MapEntry(0x00100000508, "Help"),
                    new MapEntry(0x00100000509, "Pause"),
                    new MapEntry(0x0010000050a, "Play"),
                    new MapEntry(0x0010000050b, "Props"),
                    new MapEntry(0x0010000050c, "Select"),
                    new MapEntry(0x0010000050d, "Zoom In"),
                    new MapEntry(0x0010000050e, "Zoom Out"),
                    new MapEntry(0x00100000601, "Brightness Down"),
                    new MapEntry(0x00100000602, "Brightness Up"),
                    new MapEntry(0x00100000603, "Camera"),
                    new MapEntry(0x00100000604, "Eject"),
                    new MapEntry(0x00100000605, "Log Off"),
                    new MapEntry(0x00100000606, "Power"),
                    new MapEntry(0x00100000607, "Power Off"),
                    new MapEntry(0x00100000608, "Print Screen"),
                    new MapEntry(0x00100000609, "Hibernate"),
                    new MapEntry(0x0010000060a, "Standby"),
                    new MapEntry(0x0010000060b, "Wake Up"),
                    new MapEntry(0x00100000701, "All Candidates"),
                    new MapEntry(0x00100000702, "Alphanumeric"),
                    new MapEntry(0x00100000703, "Code Input"),
                    new MapEntry(0x00100000704, "Compose"),
                    new MapEntry(0x00100000705, "Convert"),
                    new MapEntry(0x00100000706, "Final Mode"),
                    new MapEntry(0x00100000707, "Group First"),
                    new MapEntry(0x00100000708, "Group Last"),
                    new MapEntry(0x00100000709, "Group Next"),
                    new MapEntry(0x0010000070a, "Group Previous"),
                    new MapEntry(0x0010000070b, "Mode Change"),
                    new MapEntry(0x0010000070c, "Next Candidate"),
                    new MapEntry(0x0010000070d, "Non Convert"),
                    new MapEntry(0x0010000070e, "Previous Candidate"),
                    new MapEntry(0x0010000070f, "Process"),
                    new MapEntry(0x00100000710, "Single Candidate"),
                    new MapEntry(0x00100000711, "Hangul Mode"),
                    new MapEntry(0x00100000712, "Hanja Mode"),
                    new MapEntry(0x00100000713, "Junja Mode"),
                    new MapEntry(0x00100000714, "Eisu"),
                    new MapEntry(0x00100000715, "Hankaku"),
                    new MapEntry(0x00100000716, "Hiragana"),
                    new MapEntry(0x00100000717, "Hiragana Katakana"),
                    new MapEntry(0x00100000718, "Kana Mode"),
                    new MapEntry(0x00100000719, "Kanji Mode"),
                    new MapEntry(0x0010000071a, "Katakana"),
                    new MapEntry(0x0010000071b, "Romaji"),
                    new MapEntry(0x0010000071c, "Zenkaku"),
                    new MapEntry(0x0010000071d, "Zenkaku Hankaku"),
                    new MapEntry(0x00100000801, "F1"),
                    new MapEntry(0x00100000802, "F2"),
                    new MapEntry(0x00100000803, "F3"),
                    new MapEntry(0x00100000804, "F4"),
                    new MapEntry(0x00100000805, "F5"),
                    new MapEntry(0x00100000806, "F6"),
                    new MapEntry(0x00100000807, "F7"),
                    new MapEntry(0x00100000808, "F8"),
                    new MapEntry(0x00100000809, "F9"),
                    new MapEntry(0x0010000080a, "F10"),
                    new MapEntry(0x0010000080b, "F11"),
                    new MapEntry(0x0010000080c, "F12"),
                    new MapEntry(0x0010000080d, "F13"),
                    new MapEntry(0x0010000080e, "F14"),
                    new MapEntry(0x0010000080f, "F15"),
                    new MapEntry(0x00100000810, "F16"),
                    new MapEntry(0x00100000811, "F17"),
                    new MapEntry(0x00100000812, "F18"),
                    new MapEntry(0x00100000813, "F19"),
                    new MapEntry(0x00100000814, "F20"),
                    new MapEntry(0x00100000815, "F21"),
                    new MapEntry(0x00100000816, "F22"),
                    new MapEntry(0x00100000817, "F23"),
                    new MapEntry(0x00100000818, "F24"),
                    new MapEntry(0x00100000901, "Soft 1"),
                    new MapEntry(0x00100000902, "Soft 2"),
                    new MapEntry(0x00100000903, "Soft 3"),
                    new MapEntry(0x00100000904, "Soft 4"),
                    new MapEntry(0x00100000905, "Soft 5"),
                    new MapEntry(0x00100000906, "Soft 6"),
                    new MapEntry(0x00100000907, "Soft 7"),
                    new MapEntry(0x00100000908, "Soft 8"),
                    new MapEntry(0x00100000a01, "Close"),
                    new MapEntry(0x00100000a02, "Mail Forward"),
                    new MapEntry(0x00100000a03, "Mail Reply"),
                    new MapEntry(0x00100000a04, "Mail Send"),
                    new MapEntry(0x00100000a05, "Media Play Pause"),
                    new MapEntry(0x00100000a07, "Media Stop"),
                    new MapEntry(0x00100000a08, "Media Track Next"),
                    new MapEntry(0x00100000a09, "Media Track Previous"),
                    new MapEntry(0x00100000a0a, "New"),
                    new MapEntry(0x00100000a0b, "Open"),
                    new MapEntry(0x00100000a0c, "Print"),
                    new MapEntry(0x00100000a0d, "Save"),
                    new MapEntry(0x00100000a0e, "Spell Check"),
                    new MapEntry(0x00100000a0f, "Audio Volume Down"),
                    new MapEntry(0x00100000a10, "Audio Volume Up"),
                    new MapEntry(0x00100000a11, "Audio Volume Mute"),
                    new MapEntry(0x00100000b01, "Launch Application 2"),
                    new MapEntry(0x00100000b02, "Launch Calendar"),
                    new MapEntry(0x00100000b03, "Launch Mail"),
                    new MapEntry(0x00100000b04, "Launch Media Player"),
                    new MapEntry(0x00100000b05, "Launch Music Player"),
                    new MapEntry(0x00100000b06, "Launch Application 1"),
                    new MapEntry(0x00100000b07, "Launch Screen Saver"),
                    new MapEntry(0x00100000b08, "Launch Spreadsheet"),
                    new MapEntry(0x00100000b09, "Launch Web Browser"),
                    new MapEntry(0x00100000b0a, "Launch Web Cam"),
                    new MapEntry(0x00100000b0b, "Launch Word Processor"),
                    new MapEntry(0x00100000b0c, "Launch Contacts"),
                    new MapEntry(0x00100000b0d, "Launch Phone"),
                    new MapEntry(0x00100000b0e, "Launch Assistant"),
                    new MapEntry(0x00100000b0f, "Launch Control Panel"),
                    new MapEntry(0x00100000c01, "Browser Back"),
                    new MapEntry(0x00100000c02, "Browser Favorites"),
                    new MapEntry(0x00100000c03, "Browser Forward"),
                    new MapEntry(0x00100000c04, "Browser Home"),
                    new MapEntry(0x00100000c05, "Browser Refresh"),
                    new MapEntry(0x00100000c06, "Browser Search"),
                    new MapEntry(0x00100000c07, "Browser Stop"),
                    new MapEntry(0x00100000d01, "Audio Balance Left"),
                    new MapEntry(0x00100000d02, "Audio Balance Right"),
                    new MapEntry(0x00100000d03, "Audio Bass Boost Down"),
                    new MapEntry(0x00100000d04, "Audio Bass Boost Up"),
                    new MapEntry(0x00100000d05, "Audio Fader Front"),
                    new MapEntry(0x00100000d06, "Audio Fader Rear"),
                    new MapEntry(0x00100000d07, "Audio Surround Mode Next"),
                    new MapEntry(0x00100000d08, "AVR Input"),
                    new MapEntry(0x00100000d09, "AVR Power"),
                    new MapEntry(0x00100000d0a, "Channel Down"),
                    new MapEntry(0x00100000d0b, "Channel Up"),
                    new MapEntry(0x00100000d0c, "Color F0 Red"),
                    new MapEntry(0x00100000d0d, "Color F1 Green"),
                    new MapEntry(0x00100000d0e, "Color F2 Yellow"),
                    new MapEntry(0x00100000d0f, "Color F3 Blue"),
                    new MapEntry(0x00100000d10, "Color F4 Grey"),
                    new MapEntry(0x00100000d11, "Color F5 Brown"),
                    new MapEntry(0x00100000d12, "Closed Caption Toggle"),
                    new MapEntry(0x00100000d13, "Dimmer"),
                    new MapEntry(0x00100000d14, "Display Swap"),
                    new MapEntry(0x00100000d15, "Exit"),
                    new MapEntry(0x00100000d16, "Favorite Clear 0"),
                    new MapEntry(0x00100000d17, "Favorite Clear 1"),
                    new MapEntry(0x00100000d18, "Favorite Clear 2"),
                    new MapEntry(0x00100000d19, "Favorite Clear 3"),
                    new MapEntry(0x00100000d1a, "Favorite Recall 0"),
                    new MapEntry(0x00100000d1b, "Favorite Recall 1"),
                    new MapEntry(0x00100000d1c, "Favorite Recall 2"),
                    new MapEntry(0x00100000d1d, "Favorite Recall 3"),
                    new MapEntry(0x00100000d1e, "Favorite Store 0"),
                    new MapEntry(0x00100000d1f, "Favorite Store 1"),
                    new MapEntry(0x00100000d20, "Favorite Store 2"),
                    new MapEntry(0x00100000d21, "Favorite Store 3"),
                    new MapEntry(0x00100000d22, "Guide"),
                    new MapEntry(0x00100000d23, "Guide Next Day"),
                    new MapEntry(0x00100000d24, "Guide Previous Day"),
                    new MapEntry(0x00100000d25, "Info"),
                    new MapEntry(0x00100000d26, "Instant Replay"),
                    new MapEntry(0x00100000d27, "Link"),
                    new MapEntry(0x00100000d28, "List Program"),
                    new MapEntry(0x00100000d29, "Live Content"),
                    new MapEntry(0x00100000d2a, "Lock"),
                    new MapEntry(0x00100000d2b, "Media Apps"),
                    new MapEntry(0x00100000d2c, "Media Fast Forward"),
                    new MapEntry(0x00100000d2d, "Media Last"),
                    new MapEntry(0x00100000d2e, "Media Pause"),
                    new MapEntry(0x00100000d2f, "Media Play"),
                    new MapEntry(0x00100000d30, "Media Record"),
                    new MapEntry(0x00100000d31, "Media Rewind"),
                    new MapEntry(0x00100000d32, "Media Skip"),
                    new MapEntry(0x00100000d33, "Next Favorite Channel"),
                    new MapEntry(0x00100000d34, "Next User Profile"),
                    new MapEntry(0x00100000d35, "On Demand"),
                    new MapEntry(0x00100000d36, "P In P Down"),
                    new MapEntry(0x00100000d37, "P In P Move"),
                    new MapEntry(0x00100000d38, "P In P Toggle"),
                    new MapEntry(0x00100000d39, "P In P Up"),
                    new MapEntry(0x00100000d3a, "Play Speed Down"),
                    new MapEntry(0x00100000d3b, "Play Speed Reset"),
                    new MapEntry(0x00100000d3c, "Play Speed Up"),
                    new MapEntry(0x00100000d3d, "Random Toggle"),
                    new MapEntry(0x00100000d3e, "Rc Low Battery"),
                    new MapEntry(0x00100000d3f, "Record Speed Next"),
                    new MapEntry(0x00100000d40, "Rf Bypass"),
                    new MapEntry(0x00100000d41, "Scan Channels Toggle"),
                    new MapEntry(0x00100000d42, "Screen Mode Next"),
                    new MapEntry(0x00100000d43, "Settings"),
                    new MapEntry(0x00100000d44, "Split Screen Toggle"),
                    new MapEntry(0x00100000d45, "STB Input"),
                    new MapEntry(0x00100000d46, "STB Power"),
                    new MapEntry(0x00100000d47, "Subtitle"),
                    new MapEntry(0x00100000d48, "Teletext"),
                    new MapEntry(0x00100000d49, "TV"),
                    new MapEntry(0x00100000d4a, "TV Input"),
                    new MapEntry(0x00100000d4b, "TV Power"),
                    new MapEntry(0x00100000d4c, "Video Mode Next"),
                    new MapEntry(0x00100000d4d, "Wink"),
                    new MapEntry(0x00100000d4e, "Zoom Toggle"),
                    new MapEntry(0x00100000d4f, "DVR"),
                    new MapEntry(0x00100000d50, "Media Audio Track"),
                    new MapEntry(0x00100000d51, "Media Skip Backward"),
                    new MapEntry(0x00100000d52, "Media Skip Forward"),
                    new MapEntry(0x00100000d53, "Media Step Backward"),
                    new MapEntry(0x00100000d54, "Media Step Forward"),
                    new MapEntry(0x00100000d55, "Media Top Menu"),
                    new MapEntry(0x00100000d56, "Navigate In"),
                    new MapEntry(0x00100000d57, "Navigate Next"),
                    new MapEntry(0x00100000d58, "Navigate Out"),
                    new MapEntry(0x00100000d59, "Navigate Previous"),
                    new MapEntry(0x00100000d5a, "Pairing"),
                    new MapEntry(0x00100000d5b, "Media Close"),
                    new MapEntry(0x00100000e02, "Audio Bass Boost Toggle"),
                    new MapEntry(0x00100000e04, "Audio Treble Down"),
                    new MapEntry(0x00100000e05, "Audio Treble Up"),
                    new MapEntry(0x00100000e06, "Microphone Toggle"),
                    new MapEntry(0x00100000e07, "Microphone Volume Down"),
                    new MapEntry(0x00100000e08, "Microphone Volume Up"),
                    new MapEntry(0x00100000e09, "Microphone Volume Mute"),
                    new MapEntry(0x00100000f01, "Speech Correction List"),
                    new MapEntry(0x00100000f02, "Speech Input Toggle"),
                    new MapEntry(0x00100001001, "App Switch"),
                    new MapEntry(0x00100001002, "Call"),
                    new MapEntry(0x00100001003, "Camera Focus"),
                    new MapEntry(0x00100001004, "End Call"),
                    new MapEntry(0x00100001005, "Go Back"),
                    new MapEntry(0x00100001006, "Go Home"),
                    new MapEntry(0x00100001007, "Headset Hook"),
                    new MapEntry(0x00100001008, "Last Number Redial"),
                    new MapEntry(0x00100001009, "Notification"),
                    new MapEntry(0x0010000100a, "Manner Mode"),
                    new MapEntry(0x0010000100b, "Voice Dial"),
                    new MapEntry(0x00100001101, "TV 3 D Mode"),
                    new MapEntry(0x00100001102, "TV Antenna Cable"),
                    new MapEntry(0x00100001103, "TV Audio Description"),
                    new MapEntry(
                        0x00100001104,
                        "TV Audio Description Mix Down"
                    ),
                    new MapEntry(0x00100001105, "TV Audio Description Mix Up"),
                    new MapEntry(0x00100001106, "TV Contents Menu"),
                    new MapEntry(0x00100001107, "TV Data Service"),
                    new MapEntry(0x00100001108, "TV Input Component 1"),
                    new MapEntry(0x00100001109, "TV Input Component 2"),
                    new MapEntry(0x0010000110a, "TV Input Composite 1"),
                    new MapEntry(0x0010000110b, "TV Input Composite 2"),
                    new MapEntry(0x0010000110c, "TV Input HDMI 1"),
                    new MapEntry(0x0010000110d, "TV Input HDMI 2"),
                    new MapEntry(0x0010000110e, "TV Input HDMI 3"),
                    new MapEntry(0x0010000110f, "TV Input HDMI 4"),
                    new MapEntry(0x00100001110, "TV Input VGA 1"),
                    new MapEntry(0x00100001111, "TV Media Context"),
                    new MapEntry(0x00100001112, "TV Network"),
                    new MapEntry(0x00100001113, "TV Number Entry"),
                    new MapEntry(0x00100001114, "TV Radio Service"),
                    new MapEntry(0x00100001115, "TV Satellite"),
                    new MapEntry(0x00100001116, "TV Satellite BS"),
                    new MapEntry(0x00100001117, "TV Satellite CS"),
                    new MapEntry(0x00100001118, "TV Satellite Toggle"),
                    new MapEntry(0x00100001119, "TV Terrestrial Analog"),
                    new MapEntry(0x0010000111a, "TV Terrestrial Digital"),
                    new MapEntry(0x0010000111b, "TV Timer"),
                    new MapEntry(0x00100001201, "Key 11"),
                    new MapEntry(0x00100001202, "Key 12"),
                    new MapEntry(0x00200000000, "Suspend"),
                    new MapEntry(0x00200000001, "Resume"),
                    new MapEntry(0x00200000002, "Sleep"),
                    new MapEntry(0x00200000003, "Abort"),
                    new MapEntry(0x00200000010, "Lang 1"),
                    new MapEntry(0x00200000011, "Lang 2"),
                    new MapEntry(0x00200000012, "Lang 3"),
                    new MapEntry(0x00200000013, "Lang 4"),
                    new MapEntry(0x00200000014, "Lang 5"),
                    new MapEntry(0x00200000020, "Intl Backslash"),
                    new MapEntry(0x00200000021, "Intl Ro"),
                    new MapEntry(0x00200000022, "Intl Yen"),
                    new MapEntry(0x00200000100, "Control Left"),
                    new MapEntry(0x00200000101, "Control Right"),
                    new MapEntry(0x00200000102, "Shift Left"),
                    new MapEntry(0x00200000103, "Shift Right"),
                    new MapEntry(0x00200000104, "Alt Left"),
                    new MapEntry(0x00200000105, "Alt Right"),
                    new MapEntry(0x00200000106, "Meta Left"),
                    new MapEntry(0x00200000107, "Meta Right"),
                    new MapEntry(0x002000001f0, "Control"),
                    new MapEntry(0x002000001f2, "Shift"),
                    new MapEntry(0x002000001f4, "Alt"),
                    new MapEntry(0x002000001f6, "Meta"),
                    new MapEntry(0x0020000020d, "Numpad Enter"),
                    new MapEntry(0x00200000228, "Numpad Paren Left"),
                    new MapEntry(0x00200000229, "Numpad Paren Right"),
                    new MapEntry(0x0020000022a, "Numpad Multiply"),
                    new MapEntry(0x0020000022b, "Numpad Add"),
                    new MapEntry(0x0020000022c, "Numpad Comma"),
                    new MapEntry(0x0020000022d, "Numpad Subtract"),
                    new MapEntry(0x0020000022e, "Numpad Decimal"),
                    new MapEntry(0x0020000022f, "Numpad Divide"),
                    new MapEntry(0x00200000230, "Numpad 0"),
                    new MapEntry(0x00200000231, "Numpad 1"),
                    new MapEntry(0x00200000232, "Numpad 2"),
                    new MapEntry(0x00200000233, "Numpad 3"),
                    new MapEntry(0x00200000234, "Numpad 4"),
                    new MapEntry(0x00200000235, "Numpad 5"),
                    new MapEntry(0x00200000236, "Numpad 6"),
                    new MapEntry(0x00200000237, "Numpad 7"),
                    new MapEntry(0x00200000238, "Numpad 8"),
                    new MapEntry(0x00200000239, "Numpad 9"),
                    new MapEntry(0x0020000023d, "Numpad Equal"),
                    new MapEntry(0x00200000301, "Game Button 1"),
                    new MapEntry(0x00200000302, "Game Button 2"),
                    new MapEntry(0x00200000303, "Game Button 3"),
                    new MapEntry(0x00200000304, "Game Button 4"),
                    new MapEntry(0x00200000305, "Game Button 5"),
                    new MapEntry(0x00200000306, "Game Button 6"),
                    new MapEntry(0x00200000307, "Game Button 7"),
                    new MapEntry(0x00200000308, "Game Button 8"),
                    new MapEntry(0x00200000309, "Game Button 9"),
                    new MapEntry(0x0020000030a, "Game Button 10"),
                    new MapEntry(0x0020000030b, "Game Button 11"),
                    new MapEntry(0x0020000030c, "Game Button 12"),
                    new MapEntry(0x0020000030d, "Game Button 13"),
                    new MapEntry(0x0020000030e, "Game Button 14"),
                    new MapEntry(0x0020000030f, "Game Button 15"),
                    new MapEntry(0x00200000310, "Game Button 16"),
                    new MapEntry(0x00200000311, "Game Button A"),
                    new MapEntry(0x00200000312, "Game Button B"),
                    new MapEntry(0x00200000313, "Game Button C"),
                    new MapEntry(0x00200000314, "Game Button Left 1"),
                    new MapEntry(0x00200000315, "Game Button Left 2"),
                    new MapEntry(0x00200000316, "Game Button Mode"),
                    new MapEntry(0x00200000317, "Game Button Right 1"),
                    new MapEntry(0x00200000318, "Game Button Right 2"),
                    new MapEntry(0x00200000319, "Game Button Select"),
                    new MapEntry(0x0020000031a, "Game Button Start"),
                    new MapEntry(0x0020000031b, "Game Button Thumb Left"),
                    new MapEntry(0x0020000031c, "Game Button Thumb Right"),
                    new MapEntry(0x0020000031d, "Game Button X"),
                    new MapEntry(0x0020000031e, "Game Button Y"),
                    new MapEntry(0x0020000031f, "Game Button Z"),
                ])
            ))
        )
    );
    public readonly keyId: number = undefined as any;
    public constructor(keyId: number) {
        flutter.services.logicalKeyboardKey(this, keyId);
    }
    public static findKeyByKeyId(
        keyId: number
    ): ILogicalKeyboardKey | undefined {
        return flutter.services.logicalKeyboardKeyFindKeyByKeyId(keyId);
    }
    public static isControlCharacter(label: string): boolean {
        return flutter.services.logicalKeyboardKeyIsControlCharacter(label);
    }
    public static collapseSynonyms(
        input: ISet<ILogicalKeyboardKey>
    ): ISet<ILogicalKeyboardKey> {
        return flutter.services.logicalKeyboardKeyCollapseSynonyms(input);
    }
    public static knownLogicalKeys(): IIterable<ILogicalKeyboardKey> {
        return flutter.services.logicalKeyboardKeyKnownLogicalKeys();
    }
    private readonly _dart_getKeyLabel: () => string = undefined as any;
    private readonly _dart_getDebugName: () => string | undefined =
        undefined as any;
    private readonly _dart_getHashCode: () => number = undefined as any;
    private readonly _dart_getIsAutogenerated: () => boolean = undefined as any;
    private readonly _dart_getSynonyms: () => ISet<ILogicalKeyboardKey> =
        undefined as any;
    private readonly _dart_debugFillProperties: (
        properties: IDiagnosticPropertiesBuilder
    ) => void = undefined as any;
    private readonly _dart_toStringShort: () => string = undefined as any;
    private readonly _dart_toString: (props: {
        minLevel: DiagnosticLevel;
    }) => string = undefined as any;
    private readonly _dart_toDiagnosticsNode: (props?: {
        name?: string | undefined;
        style?: DiagnosticsTreeStyle | undefined;
    }) => IDiagnosticsNode = undefined as any;
    public getKeyLabel(): string {
        return this._dart_getKeyLabel();
    }
    public getDebugName(): string | undefined {
        return this._dart_getDebugName();
    }
    public getHashCode(): number {
        return this._dart_getHashCode();
    }
    public getIsAutogenerated(): boolean {
        return this._dart_getIsAutogenerated();
    }
    public getSynonyms(): ISet<ILogicalKeyboardKey> {
        return this._dart_getSynonyms();
    }
    public debugFillProperties(properties: IDiagnosticPropertiesBuilder): void {
        return this._dart_debugFillProperties(properties);
    }
    public toStringShort(): string {
        return this._dart_toStringShort();
    }
    public toString(props: { minLevel?: DiagnosticLevel }): string {
        return this._dart_toString({
            ...toStringDefaultProps,
            ...props,
        });
    }
    public toDiagnosticsNode(props?: {
        name?: string | undefined;
        style?: DiagnosticsTreeStyle | undefined;
    }): IDiagnosticsNode {
        return this._dart_toDiagnosticsNode(props);
    }
}
const toStringDefaultProps = {
    minLevel: DiagnosticLevel.info,
};
