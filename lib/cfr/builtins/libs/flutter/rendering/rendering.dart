import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/annotatedRegionLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/annotationEntry.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/annotationResult.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/backdropFilterLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/clipPathLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/clipRRectLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/clipRectLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/colorFilterLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/constraints.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/containerLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/diagnosticsDebugCreator.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/followerLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/imageFilterLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/layer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/layerLink.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/leaderLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/offsetLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/opacityLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/paintingContext.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/parentData.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/performanceOverlayLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/physicalModelLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/pictureLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/pipelineOwner.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/platformViewLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/renderObject.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/semanticsHandle.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/shaderMaskLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/textureLayer.dart';
import 'package:hydro_sdk/cfr/builtins/libs/flutter/rendering/transformLayer.dart';
import 'package:hydro_sdk/cfr/runtimeSupport.dart';

void loadrendering(
    {required HydroState hydroState, required HydroTable table}) {
  final rendering = HydroTable();
  table['rendering'] = rendering;
  loadParentData(table: rendering, hydroState: hydroState);
  loadPaintingContext(table: rendering, hydroState: hydroState);
  loadConstraints(table: rendering, hydroState: hydroState);
  loadSemanticsHandle(table: rendering, hydroState: hydroState);
  loadPipelineOwner(table: rendering, hydroState: hydroState);
  loadRenderObject(table: rendering, hydroState: hydroState);
  loadDiagnosticsDebugCreator(table: rendering, hydroState: hydroState);
  loadAnnotationEntry(table: rendering, hydroState: hydroState);
  loadAnnotationResult(table: rendering, hydroState: hydroState);
  loadLayer(table: rendering, hydroState: hydroState);
  loadPictureLayer(table: rendering, hydroState: hydroState);
  loadTextureLayer(table: rendering, hydroState: hydroState);
  loadPlatformViewLayer(table: rendering, hydroState: hydroState);
  loadPerformanceOverlayLayer(table: rendering, hydroState: hydroState);
  loadContainerLayer(table: rendering, hydroState: hydroState);
  loadOffsetLayer(table: rendering, hydroState: hydroState);
  loadClipRectLayer(table: rendering, hydroState: hydroState);
  loadClipRRectLayer(table: rendering, hydroState: hydroState);
  loadClipPathLayer(table: rendering, hydroState: hydroState);
  loadColorFilterLayer(table: rendering, hydroState: hydroState);
  loadImageFilterLayer(table: rendering, hydroState: hydroState);
  loadTransformLayer(table: rendering, hydroState: hydroState);
  loadOpacityLayer(table: rendering, hydroState: hydroState);
  loadShaderMaskLayer(table: rendering, hydroState: hydroState);
  loadBackdropFilterLayer(table: rendering, hydroState: hydroState);
  loadPhysicalModelLayer(table: rendering, hydroState: hydroState);
  loadLayerLink(table: rendering, hydroState: hydroState);
  loadLeaderLayer(table: rendering, hydroState: hydroState);
  loadFollowerLayer(table: rendering, hydroState: hydroState);
  loadAnnotatedRegionLayer(table: rendering, hydroState: hydroState);
}
